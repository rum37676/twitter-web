{"version":3,"sources":["src/app.js","src/environment.js","src/home.js","src/main.js","src/nav-bar.js","src/resources/index.js","src/services/async-http-client.js","src/services/fixtures.js","src/services/messages.js","src/services/twitter-service.js","src/viewmodels/admin/admin.js","src/viewmodels/dashboard/dashboard.js","src/viewmodels/followerTimeline/followerTimeline.js","src/viewmodels/globalTimeline/globalTimeline.js","src/viewmodels/login/login.js","src/viewmodels/logout/logout.js","src/viewmodels/profil/profil.js","src/viewmodels/signup/signup.js","src/viewmodels/socialGraph/socialGraph.js","src/viewmodels/timeline/timeline.js","src/viewmodels/tweet/blob-to-url.js","src/viewmodels/tweet/file-list-to-array.js","src/viewmodels/tweet/tweet.js","src/viewmodels/usercard/usercard.js","src/viewmodels/users/users.js","src/viewmodels/userTimeline/userTimeline.js"],"names":["App","ts","au","ea","twitterService","subscribe","router","navigate","replace","trigger","reset","msg","status","success","setRoot","configureRouter","config","map","route","name","moduleId","nav","title","attached","isAuthenticated","Promise","all","updateData","then","navigateToRoute","catch","console","error","debug","testing","Home","aurelia","role","mapUnknownRoutes","configure","use","standardConfiguration","feature","developmentLogging","plugin","start","NavBar","showNav","navItem","ownUser","log","toLowerCase","AsyncHttpClient","httpClient","fixtures","http","withBaseUrl","baseUrlLocal","authenticated","localStorage","sessionTokenTwitter","auth","JSON","parse","withHeader","token","authenticate","url","user","post","response","content","stringify","configuration","email","publish","message","clearAuthentication","get","obj","delete","Fixtures","baseUrlOnline","users","username","password","tweets","text","tweeter","TotalUpdate","total","LoginStatus","TweetUpdate","UserUpdate","OwnUserUpdate","TwitterService","FormData","data","ac","cT","res","saveTweet","tweetText","tweetImage","formData","append","getTweets","deleteTweet","tweet","_id","deleteAllTweetsForUser","follow","bool","getUsers","deleteUser","deleteAllUsers","logout","deleteTweetsForUser","updateProfil","getMe","uploadProfilImage","profilIimage","undefined","register","newUser","login","Admin","adminView","errorText","addUser","Dashboard","FollowerTimeline","updateUsers","push","followers","follower","GlobalTimeline","Login","rememberMe","emailTwitter","loginOptions","trim","Logout","Profil","profilImage","updateUser","update","deleteAllTweets","getNumberOfFollowedUsers","number","getNumberOfTweets","Signup","e","d3","socialGraph","inject","nodes","links","calculateGraph","node","link","svg","select","width","attr","height","color","scaleOrdinal","schemeCategory20","simulation","forceSimulation","force","forceLink","distance","strength","forceManyBody","forceCenter","nodeById","d","id","bilinks","forEach","s","source","t","target","i","selectAll","enter","filter","group","on","navigateToUser","call","drag","dragstarted","dragged","dragended","ticked","positionLink","positionNode","x","y","event","active","alphaTarget","restart","fx","fy","reference","userId","Timeline","updateTweets","allowDelete","activate","BlobToUrlValueConverter","toView","blob","URL","createObjectURL","FileListToArrayValueConverter","fileList","files","length","item","Tweet","imageList","selectedFiles","createTweet","addPicturesToArray","Usercard","alreadyFollowing","hasProfilImage","Users","otherUsers","UserTimeline","params"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject, Aurelia} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './services/messages';\nimport TwitterService from './services/twitter-service';\n\n@inject(TwitterService, Aurelia, EventAggregator)\nexport class App {\n\n  constructor(ts, au, ea) {\n    this.au = au;\n    this.twitterService = ts;\n    ea.subscribe(LoginStatus, msg => {\n      this.router.navigate('/', { replace: true, trigger: false });\n      this.router.reset();\n      if (msg.status.success === true) {\n        au.setRoot('home');\n      } else {\n        au.setRoot('app');\n      }\n    });\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'login'], name: 'login', moduleId: 'viewmodels/login/login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'viewmodels/signup/signup', nav: true, title: 'Signup' }\n    ]);\n    this.router = router;\n  }\n\n  attached() {\n    if (this.twitterService.isAuthenticated()) {\n      Promise.all([\n        this.twitterService.updateData()\n      ]).then(res => {\n        this.au.setRoot('home').then(() => {\n          this.router.navigateToRoute('profil');\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { inject, Aurelia } from 'aurelia-framework';\nimport TwitterService from 'services/twitter-service';\n\n@inject(Aurelia, TwitterService)\nexport class Home {\n\n  constructor(au, ts) {\n    this.aurelia = au;\n    this.twitterService = ts;\n  }\n\n  configureRouter(config, router) {\n\n    config.map([\n      { route: 'socialGraph', name: 'socialGraph', moduleId: 'viewmodels/socialGraph/socialGraph', nav: true, title: 'Network'},\n      { route: 'followerTimeline', name: 'followerTimeline', moduleId: 'viewmodels/followerTimeline/followerTimeline', nav: true, title: 'Follower Timeline' },\n      { route: ['', 'home'], name: 'globalTimeline', moduleId: 'viewmodels/globalTimeline/globalTimeline', nav: true, title: 'Global Timeline' },\n      { route: 'users', name: 'users', moduleId: 'viewmodels/users/users', nav: true, title: 'Users'},\n      { route: 'profil', name: 'profil', moduleId: 'viewmodels/profil/profil', nav: true, title: 'Profil' },\n      { route: 'admin', name: 'admin', moduleId: 'viewmodels/admin/admin', nav: true, title: 'Admin', role: 'admin' },\n      { route: 'userTimeline/:id', name: 'userTimeline', moduleId: 'viewmodels/userTimeline/userTimeline', nav: false, title: 'userTimeline' },\n      { route: 'logout', name: 'logout', moduleId: 'viewmodels/logout/logout', nav: true, title: 'Logout' }\n    ]);\n    this.router = router;\n\n    config.mapUnknownRoutes(instruction => {\n      return 'home';\n    });\n  }\n\n  attached() {\n    if (this.twitterService.isAuthenticated()) {\n      this.twitterService.updateData();\n    }\n  }\n}\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject, bindable} from 'aurelia-framework';\nimport TwitterService from './services/twitter-service';\n\n@inject(TwitterService)\nexport class NavBar {\n\n  @bindable router;\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  showNav(navItem) {\n    if (!navItem.config.role) {\n      return true;\n    }\n    if (this.twitterService.ownUser !== null) {\n      console.log('role: ' + this.twitterService.ownUser.role);\n      if (typeof this.twitterService.ownUser.role !== \"undefined\") {\n        return navItem.config.role === this.twitterService.ownUser.role.toLowerCase();\n      }\n    } else {\n      // ownUser not updated yet\n      console.log('ownUser data not initialized');\n      return false;\n    }\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport Fixtures from './fixtures';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus, OwnUserUpdate} from './messages';\n\n@inject(HttpClient, Fixtures, EventAggregator )\nexport default class AsyncHttpClient {\n\n  constructor(httpClient, fixtures, ea) {\n    this.http = httpClient;\n    this.http.configure(http => {\n      http.withBaseUrl(fixtures.baseUrlLocal);\n    });\n    this.ea = ea;\n  }\n\n  isAuthenticated() {\n    let authenticated = false;\n    if (localStorage.sessionTokenTwitter !== 'null' && typeof localStorage.sessionTokenTwitter !== 'undefined') {\n      authenticated = true;\n      this.http.configure(http => {\n        const auth = JSON.parse(localStorage.sessionTokenTwitter);\n        http.withHeader('Authorization', 'bearer ' + auth.token);\n      });\n    }\n    return authenticated;\n  }\n\n  authenticate(url, user) {\n    this.http.post(url, user).then(response => {\n      const status = response.content;\n      if (status.success) {\n        localStorage.sessionTokenTwitter = JSON.stringify(response.content);\n        this.http.configure(configuration => {\n          configuration.withHeader('Authorization', 'bearer ' + response.content.token);\n        });\n        console.log('authentication successful: logged in user: ' + user.email);\n        this.ea.publish(new OwnUserUpdate(status.user));\n      } else {\n        console.log('authentication failed: could not log in user: ' + user.email);\n      }\n      this.ea.publish(new LoginStatus(status));\n    }).catch(error => {\n      const status = {\n        success: false,\n        message: 'service not available'\n      };\n      this.ea.publish(new LoginStatus(status));\n    });\n  }\n\n  clearAuthentication() {\n    localStorage.sessionTokenTwitter = null;\n    this.http.configure(configuration => {\n      configuration.withHeader('Authorization', '');\n    });\n  }\n\n  get(url) {\n    return this.http.get(url);\n  }\n\n  post(url, obj) {\n    return this.http.post(url, obj);\n  }\n\n  delete(url) {\n    console.log('http-client delete');\n    return this.http.delete(url);\n  }\n}\n","export default class Fixtures {\n\n  baseUrlLocal = 'http://localhost:4000';\n  baseUrlOnline = 'https://safe-brushlands-98673.herokuapp.com';\n  users = [\n    {\n      username: 'user1',\n      name: 'user eins',\n      email: 'user1@1.com',\n      password: 'secret1'\n    },\n    {\n      username: 'user2',\n      name: 'user zwei',\n      email: 'user2@2.com',\n      password: 'secret2'\n    }\n  ];\n\n  tweets = [\n    {\n      text: 'Test tweet 1',\n      tweeter: this.users[0]\n    },\n    {\n      text: 'Test tweet 2',\n      tweeter: this.users[1]\n    }\n  ];\n}\n","export class TotalUpdate {\n  constructor(total) {\n    this.total = total;\n  }\n}\n\nexport class LoginStatus {\n  constructor(status) {\n    this.status = status;\n  }\n}\n\nexport class TweetUpdate {\n}\n\nexport class UserUpdate {\n}\n\nexport class OwnUserUpdate {\n  constructor(user) {\n    this.user = user;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport Fixtures from './fixtures';\nimport {LoginStatus, OwnUserUpdate, TweetUpdate, UserUpdate} from './messages';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport AsyncHttpClient from './async-http-client';\nimport { CompositionTransaction } from 'aurelia-framework';\n\n@inject(Fixtures, EventAggregator, AsyncHttpClient, CompositionTransaction, FormData)\nexport default class TwitterService {\n\n  ownUser = null;\n  users = [];\n  tweets = [];\n\n\n  constructor(data, ea, ac, cT) {\n    this.ea = ea;\n    this.ac = ac;\n    //this.compositionTransaction = cT;\n    //this.compositionTransactionNotifier = null;\n\n    this.ea.subscribe(OwnUserUpdate, msg => {\n      this.ownUser = msg.user;\n    });\n    this.ea.subscribe(LoginStatus, msg => {\n      if (msg.status.success === true) {\n        console.log('twitterService subscribe');\n        this.updateData();\n      }\n    });\n  }\n\n  updateData() {\n    //this.compositionTransactionNotifier = this.compositionTransaction.enlist();\n    return Promise.all([\n      this.ac.get('/api/tweets'),\n      this.ac.get('/api/users'),\n      this.ac.get('/api/users/me')\n    ]).then(res => {\n      this.tweets = res[0].content;\n      this.users = res[1].content;\n      this.ownUser = res[2].content;\n\n      this.ea.publish(new TweetUpdate());\n      this.ea.publish(new UserUpdate());\n      //this.compositionTransactionNotifier.done();\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  saveTweet(tweetText, tweetImage) {\n    let formData = new FormData();\n    formData.append('tweetText', tweetText);\n    if (typeof tweetImage !== 'undefined') {\n      formData.append('tweetImage', tweetImage);\n    }\n\n    this.ac.post('/api/tweets', formData).then(res => {\n      /*this.tweets.unshift(res.content);\n      this.ea.publish(new TweetUpdate());*/\n      this.getTweets();\n    });\n  }\n\n  deleteTweet(tweet) {\n    console.log('twitterService: deleteTweet');\n    this.ac.delete('/api/tweets/' + tweet._id).then(res => {\n      /*const index = this.tweets.indexOf(tweet);\n      if (index > -1) {\n        this.tweets.splice(index, 1);\n      }\n      this.ea.publish(new TweetUpdate());*/\n      this.getTweets();\n    });\n  }\n\n  deleteAllTweetsForUser(user) {\n    console.log('twitterService: deleteAllTweetsForUser');\n    this.ac.delete('/api/users/' + user._id + '/tweets').then(res => {\n      this.getTweets();\n    });\n  }\n\n  follow(user, bool) {\n    if (bool) {\n      // unfollow\n      this.ac.delete('/api/users/follow/' + user._id).then(res => {\n        /*for (let i = 0; i < this.users.length; i++) {\n          if (this.users[i]._id === res.content._id) {\n            this.users[i] = res.content;\n          }\n        }*/\n        this.getUsers();\n      });\n    } else {\n      // follow\n      this.ac.post('/api/users/follow/' + user._id).then(res => {\n        /*for (let i = 0; i < this.users.length; i++) {\n          if (this.users[i]._id === res.content._id) {\n            this.users[i] = res.content;\n          }\n        }*/\n        this.getUsers();\n      });\n    }\n  }\n\n  deleteUser(user) {\n    this.ac.delete('/api/users/' + user._id).then(res => {\n      /*const index = this.tweets.indexOf(tweet);au run --w\n      if (index > -1) {\n        this.tweets.splice(index, 1);\n      }\n      this.ea.publish(new TweetUpdate());*/\n      this.getUsers();\n      this.getTweets();\n    });\n  }\n\n  deleteAllUsers() {\n    this.ac.delete('/api/users').then(res => {\n      /*const index = this.tweets.indexOf(tweet);au run --w\n      if (index > -1) {\n        this.tweets.splice(index, 1);\n      }\n      this.ea.publish(new TweetUpdate());*/\n      this.logout();\n    });\n  }\n\n  deleteTweetsForUser(user) {\n    this.ac.delete('/api/users/' + user._id + '/tweets').then(res => {\n      this.getTweets();\n    });\n  }\n\n  updateProfil(username, name, email, password) {\n    let user = {\n      username: username,\n      name: name,\n      email: email,\n      password: password\n    };\n    this.ac.post('/api/users/me', user).then(res => {\n      this.getUsers();\n      this.getMe();\n    });\n  }\n\n  uploadProfilImage(profilIimage) {\n    if (profilIimage !== null || profilIimage !== undefined) {\n      let formData = new FormData();\n      formData.append('info', 'This is a profilImage.');\n      formData.append('profilImage', profilIimage);\n\n      this.ac.post('/api/users/image', formData).then(res => {\n        this.getMe();\n      });\n    }\n  }\n\n  isAuthenticated() {\n    return this.ac.isAuthenticated();\n  }\n\n  getUsers() {\n    return this.ac.get('/api/users').then(res => {\n      this.users = res.content;\n      console.log('getUsers');\n      console.log(this.users);\n      this.ea.publish(new UserUpdate());\n    });\n  }\n\n  getMe() {\n    return this.ac.get('/api/users/me').then(res => {\n      this.ownUser = res.content;\n      console.log('getMe');\n      console.log(this.ownUser);\n      this.ea.publish(new UserUpdate());\n    });\n  }\n\n  getTweets() {\n    return this.ac.get('/api/tweets').then(res => {\n      this.tweets = res.content;\n      console.log('getTweets');\n      console.log(this.tweets);\n      this.ea.publish(new TweetUpdate());\n    });\n  }\n\n  register(username, name, email, password) {\n    const newUser = {\n      username: username,\n      name: name,\n      email: email,\n      password: password\n    };\n    return this.ac.post('/api/users', newUser);\n  }\n\n  login(email, password) {\n    const user = {\n      email: email,\n      password: password\n    };\n    return this.ac.authenticate('/api/users/authenticate', user);\n  }\n\n  logout() {\n    const status = {\n      success: false,\n      message: ''\n    };\n    this.ac.clearAuthentication();\n    this.ea.publish(new LoginStatus(status));\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService)\nexport class Admin {\n\n  adminView = true;\n  username = '';\n  name = '';\n  email = '';\n  password = '';\n  error = false;\n  errorText = null;\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  addUser() {\n    return Promise.all([\n      this.twitterService.register(this.username, this.name, this.email, this.password)\n    ]).then(res => {\n      this.twitterService.getUsers();\n      this.errorText = null;\n    }).catch(error => {\n      this.errorText = error.response;\n      //console.error(error);\n    });\n  }\n\n  deleteUser(user) {\n    this.twitterService.deleteUser(user);\n  }\n\n  deleteTweetsForUser(user) {\n    this.twitterService.deleteTweetsForUser(user);\n  }\n\n  deleteAllUsers() {\n    this.twitterService.deleteAllUsers();\n  }\n}\n\n","export class Dashboard {\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class FollowerTimeline {\n\n  users = [];\n  tweets = [];\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.updateUsers();\n    this.ea.subscribe(UserUpdate, msg => {\n      //console.log('followerTimeline subscribed');\n      this.updateUsers();\n    });\n  }\n\n  updateUsers() {\n    this.users = [];\n    this.users.push(this.twitterService.ownUser);\n    for (let user of this.twitterService.users) {\n      for (let follower of user.followers) {\n        if (follower._id === this.twitterService.ownUser._id) {\n          this.users.push(user);\n        }\n      }\n    }\n  }\n\n  /*attached() {\n    console.log('followerTimeline attached');\n    console.log(this.tweets);\n  }*/\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class GlobalTimeline {\n\n  users = [];\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.updateUsers();\n    this.ea.subscribe(UserUpdate, msg => {\n      //console.log('globalTimeline subscribed');\n      this.updateUsers();\n    });\n  }\n\n  updateUsers() {\n    this.users = this.twitterService.users;\n  }\n\n  /*attached() {\n    this.tweets = this.twitterService.tweets;\n    console.log('globalTimeline attached');\n  }*/\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\n//import {LoginStatus} from '../../services/messages';\n\n@inject(EventAggregator, TwitterService)\nexport class Login {\n\n  email = '';\n  password = '';\n  rememberMe = false;\n\n  constructor(ea, ts) {\n    this.twitterService = ts;\n    if (localStorage.emailTwitter !== 'null' && typeof localStorage.emailTwitter !== 'undefined') {\n      let loginOptions = JSON.parse(localStorage.emailTwitter);\n      this.email = loginOptions.email;\n      this.rememberMe = loginOptions.rememberMe;\n    }\n  }\n\n  login() {\n    // localStorage: save email and rememberMe\n    if (this.rememberMe === true) {\n      let loginOptions = {\n        email: this.email,\n        rememberMe: this.rememberMe\n      };\n      localStorage.emailTwitter = JSON.stringify(loginOptions);\n    }\n    if (this.rememberMe === false) {\n      localStorage.emailTwitter = null;\n    }\n    console.log(`Trying to log in ${this.email}`);\n    this.twitterService.login(this.email.trim(), this.password.trim());\n  }\n}\n","import TwitterService from '../../services/twitter-service';\nimport {inject} from 'aurelia-framework';\n\n@inject(TwitterService)\nexport class Logout {\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  logout() {\n    console.log('logging out');\n    this.twitterService.logout();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class Profil {\n\n  ownUser = null;\n  profilImage = null;\n  username = '';\n  name = '';\n  email = '';\n  password = '';\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.updateUser();\n    this.ea.subscribe(UserUpdate, msg => {\n      this.updateUser();\n    });\n  }\n\n  updateUser() {\n    this.ownUser = this.twitterService.ownUser;\n    this.username = this.ownUser.username;\n    this.name = this.ownUser.name;\n    this.email = this.ownUser.email;\n    this.password = this.ownUser.password;\n  }\n\n  update() {\n    this.twitterService.updateProfil(this.username, this.name, this.email, this.password);\n  }\n\n  deleteAllTweets() {\n    this.twitterService.deleteAllTweetsForUser(this.ownUser);\n  }\n\n  uploadProfilImage() {\n    if (this.profilImage !== null) {\n      this.twitterService.uploadProfilImage(this.profilImage[0]);\n    }\n  }\n\n  getNumberOfFollowedUsers() {\n    let number = 0;\n    for (let user of this.twitterService.users) {\n      for (let follower of user.followers) {\n        if (follower._id === this.ownUser._id) {\n          number++;\n        }\n      }\n    }\n    return number;\n  }\n\n  getNumberOfTweets() {\n    let number = 0;\n    for (let tweet of this.twitterService.tweets) {\n      if (tweet.tweeter._id === this.ownUser._id) {\n        number++;\n      }\n    }\n    return number;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\n\n@inject(TwitterService)\nexport class Signup {\n\n  username = '';\n  name = '';\n  email = '';\n  password = '';\n  error = false;\n  errorText = null;\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  register(e) {\n    return Promise.all([\n      this.twitterService.register(this.username, this.name, this.email, this.password)\n    ]).then(res => {\n      this.errorText = null;\n      this.twitterService.login(this.email, this.password);\n    }).catch(error => {\n      this.errorText = error.response;\n      //console.error(error);\n    });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {Router} from 'aurelia-router';\nimport * as d3 from 'd3';\n\n@inject(TwitterService, Router)\nexport class socialGraph {\n\n  static inject() { return [Router]; }\n\n  // Sample implementation from https://bl.ocks.org/mbostock/4600693\n\n  nodes = [];\n  links = [];\n\n  constructor(ts, router) {\n    this.twitterService = ts;\n    this.router = router;\n    this.calculateGraph();\n  }\n\n  calculateGraph() {\n    for (let user of this.twitterService.users) {\n      let node = { 'id': user.username, 'userId': user._id, 'group': 1, 'reference': this};\n      //console.log(node);\n      this.nodes.push(node);\n\n      for (let follower of user.followers) {\n        let link = { 'source': follower.username, 'target': user.username, 'value': 1, 'distance': 40 };\n        //console.log(link);\n        this.links.push(link);\n      }\n    }\n  }\n\n  attached() {\n    let svg = d3.select('svg'),\n      width = +svg.attr('width'),\n      height = +svg.attr('height');\n\n    let color = d3.scaleOrdinal(d3.schemeCategory20);\n\n    let simulation = d3.forceSimulation()\n      .force('link', d3.forceLink().distance(10).strength(0.5))\n      .force('charge', d3.forceManyBody())\n      .force('center', d3.forceCenter(width / 2, height / 2));\n\n    let nodes = this.nodes,\n      nodeById = d3.map(nodes, function(d) { return d.id; }),\n      links = this.links,\n      bilinks = [];\n\n    links.forEach(function(link) {\n      let s = link.source = nodeById.get(link.source),\n        t = link.target = nodeById.get(link.target),\n        i = {}; // intermediate node\n      nodes.push(i);\n      links.push({source: s, target: i}, {source: i, target: t});\n      bilinks.push([s, i, t]);\n    });\n\n    let link = svg.selectAll('.link')\n      .data(bilinks)\n      .enter().append('path')\n      .attr('class', 'link');\n\n    let node = svg.selectAll('.node')\n      .data(nodes.filter(function(d) { return d.id; }))\n      .enter().append('circle')\n      .attr('class', 'node')\n      .attr('r', 7)\n      .attr('fill', function(d) { return color(d.group); })\n      .on('click', navigateToUser)\n      .call(d3.drag()\n        .on('start', dragstarted)\n        .on('drag', dragged)\n        .on('end', dragended));\n\n    node.append('title')\n      .attr('font-size', '1em')\n      .text(function(d) { return d.id; });\n\n    simulation\n      .nodes(nodes)\n      .on('tick', ticked);\n\n    simulation.force('link')\n      .links(links);\n\n    function ticked() {\n      link.attr('d', positionLink);\n      node.attr('transform', positionNode);\n    }\n\n    function positionLink(d) {\n      return 'M' + d[0].x + ',' + d[0].y\n        + 'S' + d[1].x + ',' + d[1].y\n        + ' ' + d[2].x + ',' + d[2].y;\n    }\n\n    function positionNode(d) {\n      return 'translate(' + d.x + ',' + d.y + ')';\n    }\n\n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x, d.fy = d.y;\n    }\n\n    function dragged(d) {\n      d.fx = d3.event.x, d.fy = d3.event.y;\n    }\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null, d.fy = null;\n    }\n\n    function navigateToUser(d) {\n      d.reference.router.navigate('userTimeline/' + d.userId);\n    }\n  }\n}\n\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {TweetUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class Timeline {\n  users = [];\n  tweets = [];\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.ea.subscribe(TweetUpdate, msg => {\n      //console.log('timeline subscribed');\n      this.updateTweets();\n    });\n  }\n\n  deleteTweet(tweet) {\n    console.log('timeline: delete Tweet');\n    this.twitterService.deleteTweet(tweet);\n  }\n\n  allowDelete(tweet) {\n    if (this.twitterService.ownUser !== null && this.twitterService.ownUser !== undefined) {\n      if (tweet.tweeter._id === this.twitterService.ownUser._id || this.twitterService.ownUser.role === 'admin') {\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n  }\n\n  activate(data) {\n    this.users = data;\n    //console.log('timeline activate');\n    this.updateTweets();\n  }\n\n  updateTweets() {\n    this.tweets = [];\n    for (let tweet of this.twitterService.tweets) {\n      for (let user of this.users) {\n        if (tweet.tweeter !== null && tweet.tweeter._id === user._id) {\n          this.tweets.push(tweet);\n        }\n      }\n    }\n  }\n}\n","export class BlobToUrlValueConverter {\n  toView(blob) {\n    return URL.createObjectURL(blob);\n  }\n}\n","export class FileListToArrayValueConverter {\n  toView(fileList) {\n    let files = [];\n    if (!fileList) {\n      return files;\n    }\n    for (let i = 0; i < fileList.length; i++) {\n      files.push(fileList.item(i));\n    }\n    return files;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\n\n@inject(TwitterService)\nexport class Tweet {\n\n  tweetText = '';\n  imageList = [];\n  selectedFiles = null;\n  error = false;\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  createTweet() {\n    if (this.tweetText === '' && this.imageList.length === 0) {\n      this.error = true;\n    } else {\n      this.twitterService.saveTweet(this.tweetText, this.imageList[0]);\n      this.tweetText = '';\n      this.selectedFiles = null;\n      this.imageList = [];\n    }\n  }\n\n  addPicturesToArray() {\n    for (let i = 0; i < this.selectedFiles.length; i++) {\n      this.imageList.push(this.selectedFiles.item(i));\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class Usercard {\n  userId = undefined;\n  user = null;\n  alreadyFollowing = undefined;\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.ea.subscribe(UserUpdate, msg => {\n      console.log('usercard subscribed: UserUpdate');\n      this.updateUsers();\n    });\n  }\n\n  activate(data) {\n    this.userId = data;\n    this.updateUsers();\n  }\n\n  updateUsers() {\n    for (let user of this.twitterService.users) {\n      if (user._id === this.userId) {\n        this.user = user;\n      }\n    }\n    for (let follower of this.user.followers) {\n      if (follower._id === this.twitterService.ownUser._id) {\n        this.alreadyFollowing = true;\n      }\n    }\n  }\n\n  follow() {\n    this.twitterService.follow(this.user, this.alreadyFollowing);\n    this.alreadyFollowing = !this.alreadyFollowing;\n  }\n\n  hasProfilImage() {\n    if (this.user.profilImage !== undefined) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class Users {\n\n  otherUsers = [];\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.updateUsers();\n    this.ea.subscribe(UserUpdate, msg => {\n      this.updateUsers();\n    });\n  }\n\n  updateUsers() {\n    this.otherUsers = [];\n    for (let user of this.twitterService.users) {\n      if (user._id !== this.twitterService.ownUser._id) {\n        this.otherUsers.push(user);\n      }\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class UserTimeline {\n\n  userId = null;\n  user = null;\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.ea.subscribe(UserUpdate, msg => {\n      this.updateUsers();\n    });\n  }\n\n  activate(params) {\n    this.userId = params.id;\n    this.updateUsers();\n  }\n\n  updateUsers() {\n    for (let user of this.twitterService.users) {\n      if (user._id === this.userId) {\n        this.user = user;\n      }\n    }\n  }\n}\n"],"sourceRoot":".."}