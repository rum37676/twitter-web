{"version":3,"sources":["src/app.js","src/environment.js","src/home.js","src/main.js","src/resources/index.js","src/services/async-http-client.js","src/services/fixtures.js","src/services/messages.js","src/services/twitter-service.js","src/viewmodels/dashboard/dashboard.js","src/viewmodels/followerTimeline/followerTimeline.js","src/viewmodels/globalTimeline/globalTimeline.js","src/viewmodels/login/login.js","src/viewmodels/logout/logout.js","src/viewmodels/signup/signup.js","src/viewmodels/startScreen/startScreen.js","src/viewmodels/timeline/timeline.js","src/viewmodels/tweet/blob-to-url.js","src/viewmodels/tweet/file-list-to-array.js","src/viewmodels/tweet/tweet.js","src/viewmodels/usercard/usercard.js","src/viewmodels/users/users.js","src/viewmodels/userTimeline/userTimeline.js"],"names":["App","ts","au","ea","subscribe","router","navigate","replace","trigger","reset","msg","status","success","setRoot","attached","isAuthenticated","then","navigateToRoute","configureRouter","config","map","route","name","moduleId","nav","title","debug","testing","Home","aurelia","twitterService","mapUnknownRoutes","updateData","configure","use","standardConfiguration","feature","developmentLogging","plugin","start","AsyncHttpClient","httpClient","fixtures","http","withBaseUrl","baseUrlLocal","authenticated","localStorage","sessionTokenTwitter","auth","JSON","parse","withHeader","token","authenticate","url","user","post","response","content","stringify","configuration","publish","catch","message","clearAuthentication","get","obj","delete","Fixtures","baseUrlOnline","users","username","email","password","tweets","text","tweeter","TotalUpdate","total","LoginStatus","TweetUpdate","TwitterService","FormData","data","ac","cT","ownUser","ownTweets","compositionTransaction","compositionTransactionNotifier","enlist","Promise","all","res","done","console","error","saveTweet","tweetText","tweetImage","formData","append","unshift","deleteTweet","tweet","log","_id","index","indexOf","splice","follow","bool","i","length","getUsers","getTweets","register","newUser","login","logout","Dashboard","FollowerTimeline","followedUsers","updateTweets","followers","follower","push","GlobalTimeline","Login","rememberMe","trim","Logout","Signup","e","StartScreen","Timeline","allowDelete","activate","BlobToUrlValueConverter","toView","blob","URL","createObjectURL","FileListToArrayValueConverter","fileList","files","item","Tweet","imageList","selectedFiles","createTweet","addPicturesToArray","Usercard","alreadyFollowing","Users","otherUsers","UserTimeline","userId","params","id"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject, Aurelia} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './services/messages';\nimport TwitterService from './services/twitter-service';\n\n@inject(TwitterService, Aurelia, EventAggregator)\nexport class App {\n\n  constructor(ts, au, ea) {\n    this.au = au;\n    this.ts = ts;\n    ea.subscribe(LoginStatus, msg => {\n      this.router.navigate('/', { replace: true, trigger: false });\n      this.router.reset();\n      if (msg.status.success === true) {\n        au.setRoot('home');\n      } else {\n        au.setRoot('app');\n      }\n    });\n  }\n\n  attached() {\n    if (this.ts.isAuthenticated()) {\n      this.au.setRoot('home').then(() => {\n        this.router.navigateToRoute('startScreen');\n      });\n    }\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'login'], name: 'login', moduleId: 'viewmodels/login/login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'viewmodels/signup/signup', nav: true, title: 'Signup' }\n    ]);\n    this.router = router;\n  }\n}\n","export default {\n  debug: false,\n  testing: false\n};\n","import { inject, Aurelia } from 'aurelia-framework';\nimport TwitterService from 'services/twitter-service';\n\n@inject(Aurelia, TwitterService)\nexport class Home {\n\n  constructor(au, ts) {\n    this.aurelia = au;\n    this.twitterService = ts;\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: 'startScreen', name: 'startScreen', moduleId: 'viewmodels/startScreen/startScreen', nav: true, title: 'Start Screen' },\n      { route: 'followerTimeline', name: 'followerTimeline', moduleId: 'viewmodels/followerTimeline/followerTimeline', nav: true, title: 'Follower Timeline' },\n      { route: ['', 'home'], name: 'globalTimeline', moduleId: 'viewmodels/globalTimeline/globalTimeline', nav: true, title: 'Global Timeline' },\n      { route: 'users', name: 'users', moduleId: 'viewmodels/users/users', nav: true, title: 'Users' },\n      //{ route: 'dashboard', name: 'dashboard', moduleId: 'viewmodels/dashboard/dashboard', nav: true, title: 'Dashboard' },\n      { route: 'userTimeline/:id', name: 'userTimeline', moduleId: 'viewmodels/userTimeline/userTimeline', nav: false, title: 'userTimeline' },\n      { route: 'logout', name: 'logout', moduleId: 'viewmodels/logout/logout', nav: true, title: 'Logout' }\n    ]);\n    this.router = router;\n\n    config.mapUnknownRoutes(instruction => {\n      return 'home';\n    });\n  }\n\n  attached() {\n    //console.log('home attached isAthenticated');\n    if (this.twitterService.isAuthenticated()) {\n      this.twitterService.updateData();\n    }\n    //console.log('home attached');\n    //console.log(this.twitterService.tweets);\n  }\n}\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport Fixtures from './fixtures';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './messages';\n\n@inject(HttpClient, Fixtures, EventAggregator )\nexport default class AsyncHttpClient {\n\n  constructor(httpClient, fixtures, ea) {\n    this.http = httpClient;\n    this.http.configure(http => {\n      http.withBaseUrl(fixtures.baseUrlLocal);\n    });\n    this.ea = ea;\n  }\n\n  isAuthenticated() {\n    let authenticated = false;\n    if (localStorage.sessionTokenTwitter !== 'null' && typeof localStorage.sessionTokenTwitter !== 'undefined') {\n      authenticated = true;\n      this.http.configure(http => {\n        const auth = JSON.parse(localStorage.sessionTokenTwitter);\n        http.withHeader('Authorization', 'bearer ' + auth.token);\n      });\n    }\n    return authenticated;\n  }\n\n  authenticate(url, user) {\n    //console.log('authentication');\n    this.http.post(url, user).then(response => {\n      const status = response.content;\n      if (status.success) {\n        localStorage.sessionTokenTwitter = JSON.stringify(response.content);\n        this.http.configure(configuration => {\n          configuration.withHeader('Authorization', 'bearer ' + response.content.token);\n        });\n      }\n      //console.log('authentication successful');\n      //console.log(status);\n      this.ea.publish(new LoginStatus(status));\n    }).catch(error => {\n      const status = {\n        success: false,\n        message: 'service not available'\n      };\n      this.ea.publish(new LoginStatus(status));\n    });\n  }\n\n  clearAuthentication() {\n    localStorage.sessionTokenTwitter = null;\n    this.http.configure(configuration => {\n      configuration.withHeader('Authorization', '');\n    });\n  }\n\n  get(url) {\n    return this.http.get(url);\n  }\n\n  post(url, obj) {\n    return this.http.post(url, obj);\n  }\n\n  delete(url) {\n    return this.http.delete(url);\n  }\n}\n","export default class Fixtures {\n\n  baseUrlLocal = 'http://localhost:4000';\n  baseUrlOnline = 'https://safe-brushlands-98673.herokuapp.com';\n  users = [\n    {\n      username: 'user1',\n      name: 'user eins',\n      email: 'user1@1.com',\n      password: 'secret1'\n    },\n    {\n      username: 'user2',\n      name: 'user zwei',\n      email: 'user2@2.com',\n      password: 'secret2'\n    }\n  ];\n\n  tweets = [\n    {\n      text: 'Test tweet 1',\n      tweeter: this.users[0]\n    },\n    {\n      text: 'Test tweet 2',\n      tweeter: this.users[1]\n    }\n  ];\n}\n","export class TotalUpdate {\n  constructor(total) {\n    this.total = total;\n  }\n}\n\nexport class LoginStatus {\n  constructor(status) {\n    this.status = status;\n  }\n}\n\nexport class TweetUpdate {\n}\n","import {inject} from 'aurelia-framework';\nimport Fixtures from './fixtures';\nimport {LoginStatus, TweetUpdate} from './messages';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport AsyncHttpClient from './async-http-client';\nimport { CompositionTransaction } from 'aurelia-framework';\n\n@inject(Fixtures, EventAggregator, AsyncHttpClient, CompositionTransaction, FormData)\nexport default class TwitterService {\n\n  ownUser = null;\n  ownTweets = [];\n  users = [];\n  tweets = [];\n\n\n  constructor(data, ea, ac, cT) {\n    this.ea = ea;\n    this.ac = ac;\n    this.compositionTransaction = cT;\n    this.compositionTransactionNotifier = null;\n\n    this.ea.subscribe(LoginStatus, msg => {\n      if (msg.status.success === true) {\n        this.updateData();\n      }\n    });\n  }\n\n  updateData() {\n    this.compositionTransactionNotifier = this.compositionTransaction.enlist();\n    return Promise.all([\n      this.ac.get('/api/tweets'),\n      this.ac.get('/api/users'),\n      this.ac.get('/api/users/me')\n    ]).then(res => {\n      this.tweets = res[0].content;\n      this.users = res[1].content;\n      this.ownUser = res[2].content;\n\n      this.ea.publish(new TweetUpdate(this.tweets));\n      this.compositionTransactionNotifier.done();\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  saveTweet(tweetText, tweetImage) {\n    let formData = new FormData();\n    formData.append('tweetText', tweetText);\n    if (typeof tweetImage !== 'undefined') {\n      formData.append('tweetImage', tweetImage);\n    }\n\n    this.ac.post('/api/tweets', formData).then(res => {\n      this.tweets.unshift(res.content);\n      this.ea.publish(new TweetUpdate());\n    });\n  }\n\n  deleteTweet(tweet) {\n    console.log('twitterService: deleteTweet');\n    this.ac.delete('/api/tweets/' + tweet._id).then(res => {\n      console.log('Innerhalb von callback');\n      const index = this.tweets.indexOf(tweet);\n      if (index > -1) {\n        this.tweets.splice(index, 1);\n        console.log('Tweet deleted');\n        console.log(this.tweets);\n      }\n      this.ea.publish(new TweetUpdate());\n    });\n  }\n\n  follow(user, bool) {\n    if (bool) {\n      console.log('unfollow');\n      this.ac.delete('/api/users/follow/' + user._id).then(res => {\n        for (let i = 0; i < this.users.length; i++) {\n          if (this.users[i]._id === res.content._id) {\n            this.users[i] = res.content;\n          }\n        }\n      });\n    }\n    else {\n      console.log('follow');\n      this.ac.post('/api/users/follow/' + user._id).then(res => {\n        for (let i = 0; i < this.users.length; i++) {\n          if (this.users[i]._id === res.content._id) {\n            this.users[i] = res.content;\n          }\n        }\n      });\n    }\n  }\n\n  isAuthenticated() {\n    return this.ac.isAuthenticated();\n  }\n\n  getUsers() {\n    this.ac.get('/api/users').then(res => {\n      this.users = res.content;\n    });\n  }\n\n  getTweets() {\n    this.ac.get('/api/tweets').then(res => {\n      this.users = res.content;\n    });\n  }\n\n  register(username, name, email, password) {\n    const newUser = {\n      username: username,\n      name: name,\n      email: email,\n      password: password\n    };\n    return this.ac.post('/api/users', newUser).then(res => {\n      return this.getUsers();\n    });\n  }\n\n  login(email, password) {\n    const user = {\n      email: email,\n      password: password\n    };\n    this.ac.authenticate('/api/users/authenticate', user);\n  }\n\n  logout() {\n    const status = {\n      success: false,\n      message: ''\n    };\n    this.ac.clearAuthentication();\n    this.ea.publish(new LoginStatus(status));\n  }\n}\n","export class Dashboard {\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {TweetUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class FollowerTimeline {\n\n  tweets = [];\n  followedUsers = [];\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.updateTweets();\n    this.ea.subscribe(TweetUpdate, msg => {\n      console.log('followerTimeline subscribed');\n      this.updateTweets();\n    });\n  }\n\n  updateTweets() {\n    this.followedUsers = [];\n    this.tweets = [];\n    for (let user of this.twitterService.users){\n      for (let follower of user.followers) {\n        if (follower._id === this.twitterService.ownUser._id) {\n          this.followedUsers.push(user);\n        }\n      }\n    }\n    for (let tweet of this.twitterService.tweets) {\n      if (tweet.tweeter._id === this.twitterService.ownUser._id) {\n        this.tweets.push(tweet);\n      }\n      else {\n        for (let user of this.followedUsers) {\n          if (tweet.tweeter._id === user._id) {\n            this.tweets.push(tweet);\n          }\n        }\n      }\n    }\n  }\n\n  attached() {\n    console.log('followerTimeline attached');\n    console.log(this.tweets);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {TweetUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class GlobalTimeline {\n\n  tweets = [];\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.updateTweets();\n    this.ea.subscribe(TweetUpdate, msg => {\n      console.log('globalTimeline subscribed');\n      this.updateTweets();\n    });\n  }\n\n  updateTweets() {\n    this.tweets = this.twitterService.tweets;\n  }\n\n  attached() {\n    this.tweets = this.twitterService.tweets;\n    console.log('globalTimeline attached');\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\n//import {LoginStatus} from '../../services/messages';\n\n@inject(EventAggregator, TwitterService)\nexport class Login {\n\n  email = 'marge@simpson.com ';\n  password = 'secret';\n  rememberMe = false;\n\n  constructor(ea, ts) {\n    this.twitterService = ts;\n  }\n\n  login() {\n    console.log(`Trying to log in ${this.email}`);\n    this.twitterService.login(this.email.trim(), this.password.trim());\n  }\n}\n","import TwitterService from '../../services/twitter-service';\nimport {inject} from 'aurelia-framework';\n\n@inject(TwitterService)\nexport class Logout {\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  logout() {\n    console.log('logging out');\n    this.twitterService.logout();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\n\n@inject(TwitterService)\nexport class Signup {\n\n  username = 'margeSimpson';\n  name = 'Margarete Simspon';\n  email = 'marge@simpson.com';\n  password = 'secret';\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  register(e) {\n    this.twitterService.register(this.username, this.name, this.email, this.password);\n    this.twitterService.login(this.email, this.password);\n  }\n}\n","export class StartScreen {\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\n\n@inject(TwitterService)\nexport class Timeline {\n  tweets = [];\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  deleteTweet(tweet) {\n    console.log('timeline: delete Tweet');\n    this.twitterService.deleteTweet(tweet);\n  }\n\n  allowDelete(tweet) {\n    if (tweet.tweeter._id === this.twitterService.ownUser._id) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  activate(data) {\n    this.tweets = data;\n    console.log('timeline activate');\n    console.log(this.tweets);\n  }\n}\n","export class BlobToUrlValueConverter {\n  toView(blob) {\n    return URL.createObjectURL(blob);\n  }\n}\n","export class FileListToArrayValueConverter {\n  toView(fileList) {\n    let files = [];\n    if (!fileList) {\n      return files;\n    }\n    for (let i = 0; i < fileList.length; i++) {\n      files.push(fileList.item(i));\n    }\n    return files;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\n\n@inject(TwitterService)\nexport class Tweet {\n\n  tweetText = '';\n  imageList = [];\n  selectedFiles = null;\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  createTweet() {\n    console.log(this.imageList[0]);\n    this.twitterService.saveTweet(this.tweetText, this.imageList[0]);\n    this.tweetText = '';\n    this.selectedFiles = null;\n    this.imageList = [];\n  }\n\n  addPicturesToArray() {\n    for (let i = 0; i < this.selectedFiles.length; i++) {\n      this.imageList.push(this.selectedFiles.item(i));\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\n\n@inject(TwitterService)\nexport class Usercard {\n  user = null;\n  alreadyFollowing = false;\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  activate(data) {\n    this.user = data;\n    for (let follower of this.user.followers) {\n      if (follower._id === this.twitterService.ownUser._id) {\n        this.alreadyFollowing = true;\n      }\n    }\n    //console.log(this.user);\n    //console.log(this.user._id);\n  }\n\n  follow() {\n    //console.log('follow/unfollow(' + this.user.username + ', ' + this.alreadyFollowing + ')');\n    this.twitterService.follow(this.user, this.alreadyFollowing);\n    this.alreadyFollowing = !this.alreadyFollowing;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\n\n@inject(TwitterService)\nexport class Users {\n\n  otherUsers = [];\n\n  constructor(ts) {\n    this.twitterService = ts;\n    for (let user of this.twitterService.users) {\n      if (user._id !== this.twitterService.ownUser._id) {\n        this.otherUsers.push(user);\n      }\n    }\n  }\n\n  attached() {\n    this.twitterService.updateData();\n    console.log(this.twitterService.users);\n    console.log('users attached');\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {TweetUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class UserTimeline {\n\n  tweets = [];\n  userId = null;\n  user = null;\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ownUser = ts.ownUser;\n    this.ea = ea;\n    this.ea.subscribe(TweetUpdate, msg => {\n      console.log('globalTimeline subscribed');\n      this.updateTweets();\n    });\n  }\n\n  activate(params) {\n    this.userId = params.id;\n    this.updateTweets();\n    console.log('userTimeline activate');\n  }\n\n  updateTweets() {\n    for (let user of this.twitterService.users) {\n      if (user._id === this.userId) {\n        this.user = user;\n      }\n    }\n    for (let tweet of this.twitterService.tweets) {\n      if (tweet.tweeter._id === this.userId) {\n        this.tweets.push(tweet);\n      }\n    }\n  }\n\n  attached() {\n    console.log('userTimeline attached');\n  }\n}\n"],"sourceRoot":".."}