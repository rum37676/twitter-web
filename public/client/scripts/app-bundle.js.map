{"version":3,"sources":["src/app.js","src/environment.js","src/home.js","src/main.js","src/nav-bar.js","src/services/async-http-client.js","src/services/fixtures.js","src/services/messages.js","src/services/twitter-service.js","src/resources/index.js","src/viewmodels/admin/admin.js","src/viewmodels/dashboard/dashboard.js","src/viewmodels/followerTimeline/followerTimeline.js","src/viewmodels/globalTimeline/globalTimeline.js","src/viewmodels/login/login.js","src/viewmodels/logout/logout.js","src/viewmodels/profil/profil.js","src/viewmodels/signup/signup.js","src/viewmodels/socialGraph/socialGraph.js","src/viewmodels/timeline/timeline.js","src/viewmodels/tweet/blob-to-url.js","src/viewmodels/tweet/file-list-to-array.js","src/viewmodels/tweet/tweet.js","src/viewmodels/usercard/usercard.js","src/viewmodels/users/users.js","src/viewmodels/userTimeline/userTimeline.js"],"names":["App","ts","au","ea","twitterService","subscribe","console","log","msg","status","changed","router","navigate","replace","trigger","reset","success","Promise","all","updateData","then","setRoot","navigateToRoute","catch","error","configureRouter","config","map","route","name","moduleId","nav","title","attached","isAuthenticated","debug","testing","Home","aurelia","role","mapUnknownRoutes","configure","use","standardConfiguration","feature","developmentLogging","plugin","start","NavBar","showNav","navItem","ownUser","toLowerCase","AsyncHttpClient","httpClient","fixtures","http","withBaseUrl","baseUrlOnline","localStorage","sessionTokenTwitter","auth","JSON","parse","withHeader","token","get","message","publish","clearAuthentication","authenticate","url","user","post","response","content","stringify","configuration","email","obj","delete","Fixtures","baseUrlLocal","users","username","password","tweets","text","tweeter","LoginStatus","TweetUpdate","UserUpdate","OwnUserUpdate","TwitterService","FormData","data","ac","res","saveTweet","tweetText","tweetImage","formData","append","getTweets","deleteTweet","tweet","_id","deleteAllTweetsForUser","follow","bool","getUsers","deleteUser","deleteAllUsers","logout","deleteTweetsForUser","updateProfil","getMe","uploadProfilImage","profilIimage","undefined","register","newUser","login","Admin","adminView","errorText","addUser","Dashboard","FollowerTimeline","updateUsers","push","followers","follower","GlobalTimeline","Login","rememberMe","emailTwitter","loginOptions","trim","Logout","Profil","profilImage","uploading","numberOfOwnTweets","updateUser","calculateNumberOfTweets","update","deleteAllTweets","length","getNumberOfFollowedUsers","number","Signup","e","d3","socialGraph","inject","nodes","links","calculateGraph","node","link","svg","select","width","attr","height","color","scaleOrdinal","schemeCategory20","simulation","forceSimulation","force","forceLink","distance","strength","forceManyBody","forceCenter","nodeById","d","id","bilinks","forEach","s","source","t","target","i","selectAll","enter","filter","group","on","navigateToUser","call","drag","dragstarted","dragged","dragended","ticked","positionLink","positionNode","x","y","event","active","alphaTarget","restart","fx","fy","reference","userId","Timeline","updateTweets","canDelete","activate","getDateInFormat","date","BlobToUrlValueConverter","toView","blob","URL","createObjectURL","FileListToArrayValueConverter","fileList","files","item","Tweet","imageList","selectedFiles","createTweet","addPicturesToArray","Usercard","alreadyFollowing","hasProfilImage","Users","otherUsers","UserTimeline","params"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;MAMaA,cAAAA,cADZ;AAGC,iBAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwB;AAAA;;AAAA;;AACtB,WAAKD,EAAL,GAAUA,EAAV;AACA,WAAKE,cAAL,GAAsBH,EAAtB;AACA,WAAKE,EAAL,GAAUA,EAAV;AACA,WAAKA,EAAL,CAAQE,SAAR,wBAA+B,eAAO;AACpCC,gBAAQC,GAAR,CAAY,eAAZ;AACAD,gBAAQC,GAAR,CAAYC,GAAZ;AACA,YAAIA,IAAIC,MAAJ,CAAWC,OAAX,KAAuB,IAA3B,EAAiC;AAC/B,gBAAKC,MAAL,CAAYC,QAAZ,CAAqB,GAArB,EAA0B,EAAEC,SAAS,IAAX,EAAiBC,SAAS,KAA1B,EAA1B;AACA,gBAAKH,MAAL,CAAYI,KAAZ;AACA,cAAIP,IAAIC,MAAJ,CAAWO,OAAX,KAAuB,IAA3B,EAAiC;AAC/BC,oBAAQC,GAAR,CAAY,CACV,MAAKd,cAAL,CAAoBe,UAApB,EADU,CAAZ,EAEGC,IAFH,CAEQ,eAAO;AACb,oBAAKlB,EAAL,CAAQmB,OAAR,CAAgB,MAAhB,EAAwBD,IAAxB,CAA6B,YAAM;AACjC,sBAAKT,MAAL,CAAYW,eAAZ,CAA4B,gBAA5B;AACD,eAFD;AAGD,aAND,EAMGC,KANH,CAMS,iBAAS;AAChBjB,sBAAQkB,KAAR,CAAcA,KAAd;AACD,aARD;AASD,WAVD,MAUO;AACLtB,eAAGmB,OAAH,CAAW,KAAX;AACD;AACF;AACF,OApBD;AAqBD;;kBAEDI,2CAAgBC,QAAQf,QAAQ;AAC9Be,aAAOC,GAAP,CAAW,CACT,EAAEC,OAAO,CAAC,EAAD,EAAK,OAAL,CAAT,EAAwBC,MAAM,OAA9B,EAAuCC,UAAU,wBAAjD,EAA2EC,KAAK,IAAhF,EAAsFC,OAAO,OAA7F,EADS,EAET,EAAEJ,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,0BAA7C,EAAyEC,KAAK,IAA9E,EAAoFC,OAAO,QAA3F,EAFS,CAAX;AAIA,WAAKrB,MAAL,GAAcA,MAAd;AACD;;kBAEDsB,+BAAW;AACT3B,cAAQC,GAAR,CAAY,cAAZ;AACA,WAAKH,cAAL,CAAoB8B,eAApB;AACD;;;;;;;;;;;oBC9CY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;;;;;;;;;;;;;;;;;;;MCIFC,eAAAA,eADZ;AAGC,kBAAYnC,EAAZ,EAAgBD,EAAhB,EAAoB;AAAA;;AAClB,WAAKqC,OAAL,GAAepC,EAAf;AACA,WAAKE,cAAL,GAAsBH,EAAtB;AACD;;mBAEDwB,2CAAgBC,QAAQf,QAAQ;;AAE9Be,aAAOC,GAAP,CAAW,CACT,EAAEC,OAAO,aAAT,EAAwBC,MAAM,aAA9B,EAA6CC,UAAU,oCAAvD,EAA6FC,KAAK,IAAlG,EAAwGC,OAAO,SAA/G,EADS,EAET,EAAEJ,OAAO,kBAAT,EAA6BC,MAAM,kBAAnC,EAAuDC,UAAU,8CAAjE,EAAiHC,KAAK,IAAtH,EAA4HC,OAAO,mBAAnI,EAFS,EAGT,EAAEJ,OAAO,CAAC,EAAD,EAAK,MAAL,CAAT,EAAuBC,MAAM,gBAA7B,EAA+CC,UAAU,0CAAzD,EAAqGC,KAAK,IAA1G,EAAgHC,OAAO,iBAAvH,EAHS,EAIT,EAAEJ,OAAO,OAAT,EAAkBC,MAAM,OAAxB,EAAiCC,UAAU,wBAA3C,EAAqEC,KAAK,IAA1E,EAAgFC,OAAO,OAAvF,EAJS,EAKT,EAAEJ,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,0BAA7C,EAAyEC,KAAK,IAA9E,EAAoFC,OAAO,QAA3F,EALS,EAMT,EAAEJ,OAAO,OAAT,EAAkBC,MAAM,OAAxB,EAAiCC,UAAU,wBAA3C,EAAqEC,KAAK,IAA1E,EAAgFC,OAAO,OAAvF,EAAgGO,MAAM,OAAtG,EANS,EAOT,EAAEX,OAAO,kBAAT,EAA6BC,MAAM,cAAnC,EAAmDC,UAAU,sCAA7D,EAAqGC,KAAK,KAA1G,EAAiHC,OAAO,cAAxH,EAPS,EAQT,EAAEJ,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,0BAA7C,EAAyEC,KAAK,IAA9E,EAAoFC,OAAO,QAA3F,EARS,CAAX;AAUA,WAAKrB,MAAL,GAAcA,MAAd;;AAEAe,aAAOc,gBAAP,CAAwB,uBAAe;AACrC,eAAO,MAAP;AACD,OAFD;AAGD;;;;;;;;;;;UC1BaC,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBH,OAAnB,EAA4B;AACjCA,YAAQI,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYT,KAAhB,EAAuB;AACrBG,cAAQI,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYT,OAAhB,EAAyB;AACvBE,cAAQI,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDR,YAAQS,KAAR,GAAgB3B,IAAhB,CAAqB;AAAA,aAAMkB,QAAQjB,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCZY2B,iBAAAA,iBADZ;AAKC,oBAAY/C,EAAZ,EAAgB;AAAA;;AAAA;;AACd,WAAKG,cAAL,GAAsBH,EAAtB;AACAK,cAAQC,GAAR,CAAY,qBAAZ;AACD;;qBAED0C,2BAAQC,SAAS;AACf5C,cAAQC,GAAR,CAAY,sBAAsB2C,QAAQlB,KAA1C;AACA,UAAI,CAACkB,QAAQxB,MAAR,CAAea,IAApB,EAA0B;AACxB,eAAO,IAAP;AACD;AACD,UAAI,KAAKnC,cAAL,CAAoB+C,OAApB,KAAgC,IAApC,EAA0C;AACxC7C,gBAAQC,GAAR,CAAY,WAAW,KAAKH,cAAL,CAAoB+C,OAApB,CAA4BZ,IAAnD;AACA,YAAI,OAAO,KAAKnC,cAAL,CAAoB+C,OAApB,CAA4BZ,IAAnC,KAA4C,WAAhD,EAA6D;AAC3D,iBAAOW,QAAQxB,MAAR,CAAea,IAAf,KAAwB,KAAKnC,cAAL,CAAoB+C,OAApB,CAA4BZ,IAA5B,CAAiCa,WAAjC,EAA/B;AACD;AACF,OALD,MAKO;AAEL9C,gBAAQC,GAAR,CAAY,8BAAZ;AACA,eAAO,KAAP;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCrBkB8C,0BADpB;AAGC,6BAAYC,UAAZ,EAAwBC,QAAxB,EAAkCpD,EAAlC,EAAsC;AAAA;;AACpC,WAAKqD,IAAL,GAAYF,UAAZ;AACA,WAAKE,IAAL,CAAUf,SAAV,CAAoB,gBAAQ;AAC1Be,aAAKC,WAAL,CAAiBF,SAASG,aAA1B;AACD,OAFD;AAGA,WAAKvD,EAAL,GAAUA,EAAV;AACD;;8BAED+B,6CAAkB;AAAA;;AAChB,UAAIyB,aAAaC,mBAAb,KAAqC,MAArC,IAA+C,OAAOD,aAAaC,mBAApB,KAA4C,WAA/F,EAA4G;AAC1G,aAAKJ,IAAL,CAAUf,SAAV,CAAoB,gBAAQ;AAC1B,cAAMoB,OAAOC,KAAKC,KAAL,CAAWJ,aAAaC,mBAAxB,CAAb;AACAJ,eAAKQ,UAAL,CAAgB,eAAhB,EAAiC,YAAYH,KAAKI,KAAlD;AACD,SAHD;;AAKA,eAAOhD,QAAQC,GAAR,CAAY,CACjB,KAAKsC,IAAL,CAAUU,GAAV,CAAc,oBAAd,CADiB,CAAZ,EAEJ9C,IAFI,CAEC,eAAO;AAEb,cAAIX,SAAS;AACXO,qBAAS,IADE;AAEXN,qBAAS,IAFE;AAGXyD,qBAAS;AAHE,WAAb;AAKA7D,kBAAQC,GAAR,CAAY,8CAAZ;AACA,gBAAKJ,EAAL,CAAQiE,OAAR,CAAgB,0BAAgB3D,MAAhB,CAAhB;AACA,iBAAO,IAAP;AACD,SAZM,EAYJc,KAZI,CAYE,iBAAS;AAEhB,cAAId,SAAS;AACXO,qBAAS,KADE;AAEXN,qBAAS,IAFE;AAGXyD,qBAAS;AAHE,WAAb;AAKA,gBAAKE,mBAAL;AACA/D,kBAAQC,GAAR,CAAY,8CAAZ;AACA,gBAAKJ,EAAL,CAAQiE,OAAR,CAAgB,0BAAgB3D,MAAhB,CAAhB;AACD,SAtBM,CAAP;AAuBD;AAUF;;8BAED6D,qCAAaC,KAAKC,MAAM;AAAA;;AACtB,aAAO,KAAKhB,IAAL,CAAUiB,IAAV,CAAeF,GAAf,EAAoBC,IAApB,EAA0BpD,IAA1B,CAA+B,oBAAY;AAChD,YAAIX,SAASiE,SAASC,OAAtB;AACA,YAAIlE,OAAOO,OAAX,EAAoB;AAClB2C,uBAAaC,mBAAb,GAAmCE,KAAKc,SAAL,CAAeF,SAASC,OAAxB,CAAnC;AACA,iBAAKnB,IAAL,CAAUf,SAAV,CAAoB,yBAAiB;AACnCoC,0BAAcb,UAAd,CAAyB,eAAzB,EAA0C,YAAYU,SAASC,OAAT,CAAiBV,KAAvE;AACD,WAFD;AAGA3D,kBAAQC,GAAR,CAAY,gDAAgDiE,KAAKM,KAAjE;AACA,iBAAK3E,EAAL,CAAQiE,OAAR,CAAgB,4BAAkB3D,OAAO+D,IAAzB,CAAhB;AACA/D,iBAAOC,OAAP,GAAiB,IAAjB;AACD,SARD,MAQO;AACLJ,kBAAQC,GAAR,CAAY,mDAAmDiE,KAAKM,KAApE;AACD;AACDxE,gBAAQC,GAAR,CAAY,2CAAZ;AACA,eAAKJ,EAAL,CAAQiE,OAAR,CAAgB,0BAAgB3D,MAAhB,CAAhB;AACD,OAfM,EAeJc,KAfI,CAeE,iBAAS;AAChB,YAAMd,SAAS;AACbO,mBAAS,KADI;AAEbmD,mBAAS;AAFI,SAAf;AAIA7D,gBAAQC,GAAR,CAAY,2CAAZ;AACA,eAAKJ,EAAL,CAAQiE,OAAR,CAAgB,0BAAgB3D,MAAhB,CAAhB;AACD,OAtBM,CAAP;AAuBD;;8BAED4D,qDAAsB;AACpBV,mBAAaC,mBAAb,GAAmC,IAAnC;AACA,WAAKJ,IAAL,CAAUf,SAAV,CAAoB,yBAAiB;AACnCoC,sBAAcb,UAAd,CAAyB,eAAzB,EAA0C,EAA1C;AACD,OAFD;AAGD;;8BAEDE,mBAAIK,KAAK;AACP,aAAO,KAAKf,IAAL,CAAUU,GAAV,CAAcK,GAAd,CAAP;AACD;;8BAEDE,qBAAKF,KAAKQ,KAAK;AACb,aAAO,KAAKvB,IAAL,CAAUiB,IAAV,CAAeF,GAAf,EAAoBQ,GAApB,CAAP;AACD;;8BAEDC,0BAAOT,KAAK;AACV,aAAO,KAAKf,IAAL,CAAUwB,MAAV,CAAiBT,GAAjB,CAAP;AACD;;;;oBA/FkBlB;;;;;;;;;;;;;;;MCPA4B;;;SAEnBC,eAAe;SACfxB,gBAAgB;SAChByB,QAAQ,CACN;AACEC,gBAAU,OADZ;AAEEvD,YAAM,WAFR;AAGEiD,aAAO,aAHT;AAIEO,gBAAU;AAJZ,KADM,EAON;AACED,gBAAU,OADZ;AAEEvD,YAAM,WAFR;AAGEiD,aAAO,aAHT;AAIEO,gBAAU;AAJZ,KAPM;SAeRC,SAAS,CACP;AACEC,YAAM,cADR;AAEEC,eAAS,KAAKL,KAAL,CAAW,CAAX;AAFX,KADO,EAKP;AACEI,YAAM,cADR;AAEEC,eAAS,KAAKL,KAAL,CAAW,CAAX;AAFX,KALO;;;oBAnBUF;;;;;;;;;;;;;;;MCARQ,sBAAAA,cACX,qBAAYhF,MAAZ,EAAoB;AAAA;;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACD;;MAGUiF,sBAAAA;;;;MAGAC,qBAAAA;;;;MAGAC,wBAAAA,gBACX,uBAAYpB,IAAZ,EAAkB;AAAA;;AAChB,SAAKA,IAAL,GAAYA,IAAZ;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCRkBqB,yBADpB,sHAAmDC,QAAnD;AAQC,4BAAYC,IAAZ,EAAkB5F,EAAlB,EAAsB6F,EAAtB,EAA0B;AAAA;;AAAA;;AAAA,WAL1B7C,OAK0B,GALhB,IAKgB;AAAA,WAJ1BgC,KAI0B,GAJlB,EAIkB;AAAA,WAH1BG,MAG0B,GAHjB,EAGiB;;AACxB,WAAKnF,EAAL,GAAUA,EAAV;AACA,WAAK6F,EAAL,GAAUA,EAAV;;AAEA,WAAK7F,EAAL,CAAQE,SAAR,0BAAiC,eAAO;AACtC,cAAK8C,OAAL,GAAe3C,IAAIgE,IAAnB;AACD,OAFD;AAGA,WAAKrE,EAAL,CAAQE,SAAR,wBAA+B,eAAO;AACpC,YAAIG,IAAIC,MAAJ,CAAWO,OAAX,KAAuB,IAA3B,EAAiC;AAC/BV,kBAAQC,GAAR,CAAY,6BAAZ;AACA,gBAAKY,UAAL;AACD,SAHD,MAGO;AACL,gBAAK6E,EAAL,CAAQ3B,mBAAR;AACD;AACF,OAPD;AAQD;;6BAEDlD,mCAAa;AAAA;;AACX,aAAOF,QAAQC,GAAR,CAAY,CACjB,KAAK8E,EAAL,CAAQ9B,GAAR,CAAY,aAAZ,CADiB,EAEjB,KAAK8B,EAAL,CAAQ9B,GAAR,CAAY,YAAZ,CAFiB,EAGjB,KAAK8B,EAAL,CAAQ9B,GAAR,CAAY,eAAZ,CAHiB,CAAZ,EAIJ9C,IAJI,CAIC,eAAO;AACb,eAAKkE,MAAL,GAAcW,IAAI,CAAJ,EAAOtB,OAArB;AACA,eAAKQ,KAAL,GAAac,IAAI,CAAJ,EAAOtB,OAApB;AACA,eAAKxB,OAAL,GAAe8C,IAAI,CAAJ,EAAOtB,OAAtB;;AAEA,eAAKxE,EAAL,CAAQiE,OAAR,CAAgB,2BAAhB;AACA,eAAKjE,EAAL,CAAQiE,OAAR,CAAgB,0BAAhB;AACA,eAAKjE,EAAL,CAAQiE,OAAR,CAAgB,4BAAkB,OAAKjB,OAAvB,CAAhB;AACA7C,gBAAQC,GAAR,CAAY,kCAAZ;AACD,OAbM,EAaJgB,KAbI,CAaE,iBAAS;AAChBjB,gBAAQkB,KAAR,CAAcA,KAAd;AACD,OAfM,CAAP;AAgBD;;6BAED0E,+BAAUC,WAAWC,YAAY;AAAA;;AAC/B,UAAIC,WAAW,IAAIP,QAAJ,EAAf;AACAO,eAASC,MAAT,CAAgB,MAAhB,EAAwBH,SAAxB;AACA,UAAI,OAAOC,UAAP,KAAsB,WAA1B,EAAuC;AACrCC,iBAASC,MAAT,CAAgB,YAAhB,EAA8BF,UAA9B;AACD;;AAED,WAAKJ,EAAL,CAAQvB,IAAR,CAAa,aAAb,EAA4B4B,QAA5B,EAAsCjF,IAAtC,CAA2C,eAAO;AAChD,eAAKmF,SAAL;AACD,OAFD;AAGD;;6BAEDC,mCAAYC,OAAO;AAAA;;AACjBnG,cAAQC,GAAR,CAAY,6BAAZ;AACA,WAAKyF,EAAL,CAAQhB,MAAR,CAAe,iBAAiByB,MAAMC,GAAtC,EAA2CtF,IAA3C,CAAgD,eAAO;AACrD,eAAKmF,SAAL;AACD,OAFD;AAGD;;6BAEDI,yDAAuBnC,MAAM;AAAA;;AAC3BlE,cAAQC,GAAR,CAAY,wCAAZ;AACA,WAAKyF,EAAL,CAAQhB,MAAR,CAAe,gBAAgBR,KAAKkC,GAArB,GAA2B,SAA1C,EAAqDtF,IAArD,CAA0D,eAAO;AAC/D,eAAKmF,SAAL;AACD,OAFD;AAGD;;6BAEDK,yBAAOpC,MAAMqC,MAAM;AAAA;;AACjB,UAAIA,IAAJ,EAAU;AAER,aAAKb,EAAL,CAAQhB,MAAR,CAAe,uBAAuBR,KAAKkC,GAA3C,EAAgDtF,IAAhD,CAAqD,eAAO;AAC1D,iBAAK0F,QAAL;AACD,SAFD;AAGD,OALD,MAKO;AAEL,aAAKd,EAAL,CAAQvB,IAAR,CAAa,uBAAuBD,KAAKkC,GAAzC,EAA8CtF,IAA9C,CAAmD,eAAO;AACxD,iBAAK0F,QAAL;AACD,SAFD;AAGD;AACF;;6BAEDC,iCAAWvC,MAAM;AAAA;;AACf,WAAKwB,EAAL,CAAQhB,MAAR,CAAe,gBAAgBR,KAAKkC,GAApC,EAAyCtF,IAAzC,CAA8C,eAAO;AACnD,eAAK0F,QAAL;AACA,eAAKP,SAAL;AACD,OAHD;AAID;;6BAEDS,2CAAiB;AAAA;;AACf,WAAKhB,EAAL,CAAQhB,MAAR,CAAe,YAAf,EAA6B5D,IAA7B,CAAkC,eAAO;AACvC,eAAK6F,MAAL;AACD,OAFD;AAGD;;6BAEDC,mDAAoB1C,MAAM;AAAA;;AACxB,WAAKwB,EAAL,CAAQhB,MAAR,CAAe,gBAAgBR,KAAKkC,GAArB,GAA2B,SAA1C,EAAqDtF,IAArD,CAA0D,eAAO;AAC/D,eAAKmF,SAAL;AACD,OAFD;AAGD;;6BAEDY,qCAAa/B,UAAUvD,MAAMiD,OAAOO,UAAU;AAAA;;AAC5C,UAAIb,OAAO;AACTY,kBAAUA,QADD;AAETvD,cAAMA,IAFG;AAGTiD,eAAOA,KAHE;AAITO,kBAAUA;AAJD,OAAX;AAMA,WAAKW,EAAL,CAAQvB,IAAR,CAAa,eAAb,EAA8BD,IAA9B,EAAoCpD,IAApC,CAAyC,eAAO;AAC9C,gBAAK0F,QAAL;AACA,gBAAKM,KAAL;AACD,OAHD;AAID;;6BAEDC,+CAAkBC,cAAc;AAAA;;AAC9B,UAAIA,iBAAiB,IAAjB,IAAyBA,iBAAiBC,SAA9C,EAAyD;AACvD,YAAIlB,WAAW,IAAIP,QAAJ,EAAf;AACAO,iBAASC,MAAT,CAAgB,MAAhB,EAAwB,wBAAxB;AACAD,iBAASC,MAAT,CAAgB,aAAhB,EAA+BgB,YAA/B;;AAEA,aAAKtB,EAAL,CAAQvB,IAAR,CAAa,kBAAb,EAAiC4B,QAAjC,EAA2CjF,IAA3C,CAAgD,eAAO;AACrD,kBAAKgG,KAAL;AACD,SAFD;AAGD;AACF;;6BAEDlF,6CAAkB;AAChB,aAAO,KAAK8D,EAAL,CAAQ9D,eAAR,EAAP;AACD;;6BAED4E,+BAAW;AAAA;;AACT,aAAO,KAAKd,EAAL,CAAQ9B,GAAR,CAAY,YAAZ,EAA0B9C,IAA1B,CAA+B,eAAO;AAC3C,gBAAK+D,KAAL,GAAac,IAAItB,OAAjB;AACA,gBAAKxE,EAAL,CAAQiE,OAAR,CAAgB,0BAAhB;AACD,OAHM,CAAP;AAID;;6BAEDgD,yBAAQ;AAAA;;AACN,aAAO,KAAKpB,EAAL,CAAQ9B,GAAR,CAAY,eAAZ,EAA6B9C,IAA7B,CAAkC,eAAO;AAC9C,gBAAK+B,OAAL,GAAe8C,IAAItB,OAAnB;AACA,gBAAKxE,EAAL,CAAQiE,OAAR,CAAgB,0BAAhB;AACD,OAHM,CAAP;AAID;;6BAEDmC,iCAAY;AAAA;;AACV,aAAO,KAAKP,EAAL,CAAQ9B,GAAR,CAAY,aAAZ,EAA2B9C,IAA3B,CAAgC,eAAO;AAC5C,gBAAKkE,MAAL,GAAcW,IAAItB,OAAlB;AACA,gBAAKxE,EAAL,CAAQiE,OAAR,CAAgB,2BAAhB;AACD,OAHM,CAAP;AAID;;6BAEDoD,6BAASpC,UAAUvD,MAAMiD,OAAOO,UAAU;AACxC,UAAMoC,UAAU;AACdrC,kBAAUA,QADI;AAEdvD,cAAMA,IAFQ;AAGdiD,eAAOA,KAHO;AAIdO,kBAAUA;AAJI,OAAhB;AAMA,aAAO,KAAKW,EAAL,CAAQvB,IAAR,CAAa,YAAb,EAA2BgD,OAA3B,CAAP;AACD;;6BAEDC,uBAAM5C,OAAOO,UAAU;AACrB,UAAMb,OAAO;AACXM,eAAOA,KADI;AAEXO,kBAAUA;AAFC,OAAb;AAIA,aAAO,KAAKW,EAAL,CAAQ1B,YAAR,CAAqB,yBAArB,EAAgDE,IAAhD,CAAP;AACD;;6BAEDyC,2BAAS;AACP,UAAMxG,SAAS;AACbO,iBAAS,KADI;AAEbmD,iBAAS,QAFI;AAGbzD,iBAAS;AAHI,OAAf;AAKA,WAAKsF,EAAL,CAAQ3B,mBAAR;AACA/D,cAAQC,GAAR,CAAY,kCAAZ;AACA,WAAKJ,EAAL,CAAQiE,OAAR,CAAgB,0BAAgB3D,MAAhB,CAAhB;AACD;;;;oBAnLkBoF;;;;;;;;UCPLpD,YAAAA;AAAT,WAASA,SAAT,CAAmBf,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;;;;;;;;;MCGYiG,gBAAAA,gBADZ;AAWC,mBAAY1H,EAAZ,EAAgB;AAAA;;AAAA,WARhB2H,SAQgB,GARJ,IAQI;AAAA,WAPhBxC,QAOgB,GAPL,EAOK;AAAA,WANhBvD,IAMgB,GANT,EAMS;AAAA,WALhBiD,KAKgB,GALR,EAKQ;AAAA,WAJhBO,QAIgB,GAJL,EAIK;AAAA,WAHhB7D,KAGgB,GAHR,KAGQ;AAAA,WAFhBqG,SAEgB,GAFJ,IAEI;;AACd,WAAKzH,cAAL,GAAsBH,EAAtB;AACD;;oBAED6H,6BAAU;AAAA;;AACR,aAAO7G,QAAQC,GAAR,CAAY,CACjB,KAAKd,cAAL,CAAoBoH,QAApB,CAA6B,KAAKpC,QAAlC,EAA4C,KAAKvD,IAAjD,EAAuD,KAAKiD,KAA5D,EAAmE,KAAKO,QAAxE,CADiB,CAAZ,EAEJjE,IAFI,CAEC,eAAO;AACb,cAAKhB,cAAL,CAAoB0G,QAApB;AACA,cAAKe,SAAL,GAAiB,IAAjB;AACD,OALM,EAKJtG,KALI,CAKE,iBAAS;AAChB,cAAKsG,SAAL,GAAiBrG,MAAMkD,QAAvB;AAED,OARM,CAAP;AASD;;oBAEDqC,iCAAWvC,MAAM;AACf,WAAKpE,cAAL,CAAoB2G,UAApB,CAA+BvC,IAA/B;AACD;;oBAED0C,mDAAoB1C,MAAM;AACxB,WAAKpE,cAAL,CAAoB8G,mBAApB,CAAwC1C,IAAxC;AACD;;oBAEDwC,2CAAiB;AACf,WAAK5G,cAAL,CAAoB4G,cAApB;AACD;;;;;;;;;;;;;;;;;;MCzCUe,oBAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCMAC,2BAAAA,2BADZ;AAMC,8BAAY/H,EAAZ,EAAgBE,EAAhB,EAAoB;AAAA;;AAAA;;AAAA,WAHpBgF,KAGoB,GAHZ,EAGY;AAAA,WAFpBG,MAEoB,GAFX,EAEW;;AAClB,WAAKlF,cAAL,GAAsBH,EAAtB;AACA,WAAKE,EAAL,GAAUA,EAAV;AACA,WAAK8H,WAAL;AACA,WAAK9H,EAAL,CAAQE,SAAR,uBAA8B,eAAO;AACnC,cAAK4H,WAAL;AACD,OAFD;AAGD;;+BAEDA,qCAAc;AACZ,WAAK9C,KAAL,GAAa,EAAb;AACA,WAAKA,KAAL,CAAW+C,IAAX,CAAgB,KAAK9H,cAAL,CAAoB+C,OAApC;AACA,2BAAiB,KAAK/C,cAAL,CAAoB+E,KAArC,kHAA4C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAnCX,IAAmC;;AAC1C,8BAAqBA,KAAK2D,SAA1B,yHAAqC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,cAA5BC,QAA4B;;AACnC,cAAIA,SAAS1B,GAAT,KAAiB,KAAKtG,cAAL,CAAoB+C,OAApB,CAA4BuD,GAAjD,EAAsD;AACpD,iBAAKvB,KAAL,CAAW+C,IAAX,CAAgB1D,IAAhB;AACD;AACF;AACF;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCxBU6D,yBAAAA,yBADZ;AAKC,4BAAYpI,EAAZ,EAAgBE,EAAhB,EAAoB;AAAA;;AAAA;;AAAA,WAFpBgF,KAEoB,GAFZ,EAEY;;AAClB,WAAK/E,cAAL,GAAsBH,EAAtB;AACA,WAAKE,EAAL,GAAUA,EAAV;AACA,WAAK8H,WAAL;AACA,WAAK9H,EAAL,CAAQE,SAAR,uBAA8B,eAAO;AACnC,cAAK4H,WAAL;AACD,OAFD;AAGD;;6BAEDA,qCAAc;AACZ,WAAK9C,KAAL,GAAa,KAAK/E,cAAL,CAAoB+E,KAAjC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCfUmD,gBAAAA,gBADZ;AAQC,mBAAYnI,EAAZ,EAAgBF,EAAhB,EAAoB;AAAA;;AAAA;;AAAA,WALpB6E,KAKoB,GALZ,EAKY;AAAA,WAJpBO,QAIoB,GAJT,EAIS;AAAA,WAHpBkD,UAGoB,GAHP,KAGO;AAAA,WAFpB/G,KAEoB,GAFZ,KAEY;;AAClB,WAAKpB,cAAL,GAAsBH,EAAtB;AACA,WAAKE,EAAL,GAAUA,EAAV;AACA,UAAIwD,aAAa6E,YAAb,KAA8B,MAA9B,IAAwC,OAAO7E,aAAa6E,YAApB,KAAqC,WAAjF,EAA8F;AAC5F,YAAIC,eAAe3E,KAAKC,KAAL,CAAWJ,aAAa6E,YAAxB,CAAnB;AACA,aAAK1D,KAAL,GAAa2D,aAAa3D,KAA1B;AACA,aAAKyD,UAAL,GAAkBE,aAAaF,UAA/B;AACD;AACD,WAAKpI,EAAL,CAAQE,SAAR,wBAA+B,eAAO;AACpC,YAAIG,IAAIC,MAAJ,CAAWO,OAAX,KAAuB,IAAvB,IAA+BR,IAAIC,MAAJ,CAAWC,OAAX,KAAuB,IAA1D,EAAgE;AAC9D,gBAAKc,KAAL,GAAa,IAAb;AACD;AACF,OAJD;AAKD;;oBAEDkG,yBAAQ;AAEN,UAAI,KAAKa,UAAL,KAAoB,IAAxB,EAA8B;AAC5B,YAAIE,eAAe;AACjB3D,iBAAO,KAAKA,KADK;AAEjByD,sBAAY,KAAKA;AAFA,SAAnB;AAIA5E,qBAAa6E,YAAb,GAA4B1E,KAAKc,SAAL,CAAe6D,YAAf,CAA5B;AACD;AACD,UAAI,KAAKF,UAAL,KAAoB,KAAxB,EAA+B;AAC7B5E,qBAAa6E,YAAb,GAA4B,IAA5B;AACD;AACDlI,cAAQC,GAAR,uBAAgC,KAAKuE,KAArC;AACA,WAAK1E,cAAL,CAAoBsH,KAApB,CAA0B,KAAK5C,KAAL,CAAW4D,IAAX,EAA1B,EAA6C,KAAKrD,QAAL,CAAcqD,IAAd,EAA7C;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCtCUC,iBAAAA,iBADZ;AAGC,oBAAY1I,EAAZ,EAAgB;AAAA;;AACd,WAAKG,cAAL,GAAsBH,EAAtB;AACD;;qBAEDgH,2BAAS;AACP3G,cAAQC,GAAR,CAAY,aAAZ;AACA,WAAKH,cAAL,CAAoB6G,MAApB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCPU2B,iBAAAA,iBADZ;AAYC,oBAAY3I,EAAZ,EAAgBE,EAAhB,EAAoB;AAAA;;AAAA;;AAAA,WATpBgD,OASoB,GATV,IASU;AAAA,WARpB0F,WAQoB,GARN,IAQM;AAAA,WAPpBC,SAOoB,GAPR,KAOQ;AAAA,WANpB1D,QAMoB,GANT,EAMS;AAAA,WALpBvD,IAKoB,GALb,EAKa;AAAA,WAJpBiD,KAIoB,GAJZ,EAIY;AAAA,WAHpBO,QAGoB,GAHT,EAGS;AAAA,WAFpB0D,iBAEoB,GAFA,CAEA;;AAClB,WAAK3I,cAAL,GAAsBH,EAAtB;AACA,WAAKE,EAAL,GAAUA,EAAV;AACA,WAAK6I,UAAL;AACA,WAAKC,uBAAL;AACA,WAAK9I,EAAL,CAAQE,SAAR,uBAA8B,eAAO;AACnC,cAAK2I,UAAL;AACD,OAFD;AAGA,WAAK7I,EAAL,CAAQE,SAAR,wBAA+B,eAAO;AACpC,cAAK4I,uBAAL;AACD,OAFD;AAGA,WAAKF,iBAAL;AACD;;qBAEDC,mCAAa;AACX,WAAK7F,OAAL,GAAe,KAAK/C,cAAL,CAAoB+C,OAAnC;AACA,WAAKiC,QAAL,GAAgB,KAAKjC,OAAL,CAAaiC,QAA7B;AACA,WAAKvD,IAAL,GAAY,KAAKsB,OAAL,CAAatB,IAAzB;AACA,WAAKiD,KAAL,GAAa,KAAK3B,OAAL,CAAa2B,KAA1B;AACA,WAAKO,QAAL,GAAgB,KAAKlC,OAAL,CAAakC,QAA7B;AACA,WAAKwD,WAAL,GAAmB,IAAnB;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACD;;qBAEDI,2BAAS;AACP,WAAK9I,cAAL,CAAoB+G,YAApB,CAAiC,KAAK/B,QAAtC,EAAgD,KAAKvD,IAArD,EAA2D,KAAKiD,KAAhE,EAAuE,KAAKO,QAA5E;AACD;;qBAED8D,6CAAkB;AAChB,WAAK/I,cAAL,CAAoBuG,sBAApB,CAA2C,KAAKxD,OAAhD;AACD;;qBAEDkE,iDAAoB;AAClB,UAAI,KAAKwB,WAAL,KAAqB,IAArB,IAA6B,KAAKA,WAAL,CAAiBO,MAAjB,GAA0B,CAA3D,EAA8D;AAC5D,aAAKN,SAAL,GAAiB,IAAjB;AACA,aAAK1I,cAAL,CAAoBiH,iBAApB,CAAsC,KAAKwB,WAAL,CAAiB,CAAjB,CAAtC;AACA,aAAKA,WAAL,GAAmB,IAAnB;AACD;AACF;;qBAEDQ,+DAA2B;AACzB,UAAIC,SAAS,CAAb;AACA,2BAAiB,KAAKlJ,cAAL,CAAoB+E,KAArC,kHAA4C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAnCX,IAAmC;;AAC1C,8BAAqBA,KAAK2D,SAA1B,yHAAqC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,cAA5BC,QAA4B;;AACnC,cAAIA,SAAS1B,GAAT,KAAiB,KAAKvD,OAAL,CAAauD,GAAlC,EAAuC;AACrC4C;AACD;AACF;AACF;AACD,aAAOA,MAAP;AACD;;qBAEDL,6DAA0B;AACxB,WAAKF,iBAAL,GAAyB,CAAzB;AACA,4BAAkB,KAAK3I,cAAL,CAAoBkF,MAAtC,yHAA8C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAArCmB,KAAqC;;AAC5C,YAAIA,MAAMjB,OAAN,CAAckB,GAAd,KAAsB,KAAKvD,OAAL,CAAauD,GAAvC,EAA4C;AAC1C,eAAKqC,iBAAL;AACD;AACF;AACDzI,cAAQC,GAAR,CAAY,KAAKwI,iBAAjB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCzEUQ,iBAAAA,iBADZ;AAUC,oBAAYtJ,EAAZ,EAAgB;AAAA;;AAAA,WAPhBmF,QAOgB,GAPL,EAOK;AAAA,WANhBvD,IAMgB,GANT,EAMS;AAAA,WALhBiD,KAKgB,GALR,EAKQ;AAAA,WAJhBO,QAIgB,GAJL,EAIK;AAAA,WAHhB7D,KAGgB,GAHR,KAGQ;AAAA,WAFhBqG,SAEgB,GAFJ,IAEI;;AACd,WAAKzH,cAAL,GAAsBH,EAAtB;AACD;;qBAEDuH,6BAASgC,GAAG;AAAA;;AACV,aAAOvI,QAAQC,GAAR,CAAY,CACjB,KAAKd,cAAL,CAAoBoH,QAApB,CAA6B,KAAKpC,QAAL,CAAcsD,IAAd,EAA7B,EAAmD,KAAK7G,IAAL,CAAU6G,IAAV,EAAnD,EAAqE,KAAK5D,KAAL,CAAW4D,IAAX,EAArE,EAAwF,KAAKrD,QAAL,CAAcqD,IAAd,EAAxF,CADiB,CAAZ,EAEJtH,IAFI,CAEC,eAAO;AACb,cAAKyG,SAAL,GAAiB,IAAjB;AACA,cAAKzH,cAAL,CAAoBsH,KAApB,CAA0B,MAAK5C,KAA/B,EAAsC,MAAKO,QAA3C;AACD,OALM,EAKJ9D,KALI,CAKE,iBAAS;AAChB,cAAKsG,SAAL,GAAiBrG,MAAMkD,QAAvB;AAED,OARM,CAAP;AASD;;;;;;;;;;;;;;;MCxBS+E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAGCC,sBAAAA,sBADZ;gBAGQC,2BAAS;AAAE,aAAO,uBAAP;AAAkB;;AAOpC,yBAAY1J,EAAZ,EAAgBU,MAAhB,EAAwB;AAAA;;AAAA,WAHxBiJ,KAGwB,GAHhB,EAGgB;AAAA,WAFxBC,KAEwB,GAFhB,EAEgB;;AACtB,WAAKzJ,cAAL,GAAsBH,EAAtB;AACA,WAAKU,MAAL,GAAcA,MAAd;AACA,WAAKmJ,cAAL;AACD;;0BAEDA,2CAAiB;AACf,2BAAiB,KAAK1J,cAAL,CAAoB+E,KAArC,kHAA4C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAnCX,IAAmC;;AAC1C,YAAIuF,OAAO,EAAE,MAAMvF,KAAKY,QAAb,EAAuB,UAAUZ,KAAKkC,GAAtC,EAA2C,SAAS,CAApD,EAAuD,aAAa,IAApE,EAAX;;AAEA,aAAKkD,KAAL,CAAW1B,IAAX,CAAgB6B,IAAhB;;AAEA,8BAAqBvF,KAAK2D,SAA1B,yHAAqC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,cAA5BC,QAA4B;;AACnC,cAAI4B,OAAO,EAAE,UAAU5B,SAAShD,QAArB,EAA+B,UAAUZ,KAAKY,QAA9C,EAAwD,SAAS,CAAjE,EAAoE,YAAY,EAAhF,EAAX;;AAEA,eAAKyE,KAAL,CAAW3B,IAAX,CAAgB8B,IAAhB;AACD;AACF;AACF;;0BAED/H,+BAAW;AACT,UAAIgI,MAAMR,GAAGS,MAAH,CAAU,KAAV,CAAV;AAAA,UACEC,QAAQ,CAACF,IAAIG,IAAJ,CAAS,OAAT,CADX;AAAA,UAEEC,SAAS,CAACJ,IAAIG,IAAJ,CAAS,QAAT,CAFZ;;AAIA,UAAIE,QAAQb,GAAGc,YAAH,CAAgBd,GAAGe,gBAAnB,CAAZ;;AAEA,UAAIC,aAAahB,GAAGiB,eAAH,GACdC,KADc,CACR,MADQ,EACAlB,GAAGmB,SAAH,GAAeC,QAAf,CAAwB,EAAxB,EAA4BC,QAA5B,CAAqC,GAArC,CADA,EAEdH,KAFc,CAER,QAFQ,EAEElB,GAAGsB,aAAH,EAFF,EAGdJ,KAHc,CAGR,QAHQ,EAGElB,GAAGuB,WAAH,CAAeb,QAAQ,CAAvB,EAA0BE,SAAS,CAAnC,CAHF,CAAjB;;AAKA,UAAIT,QAAQ,KAAKA,KAAjB;AAAA,UACEqB,WAAWxB,GAAG9H,GAAH,CAAOiI,KAAP,EAAc,UAASsB,CAAT,EAAY;AAAE,eAAOA,EAAEC,EAAT;AAAc,OAA1C,CADb;AAAA,UAEEtB,QAAQ,KAAKA,KAFf;AAAA,UAGEuB,UAAU,EAHZ;;AAKAvB,YAAMwB,OAAN,CAAc,UAASrB,IAAT,EAAe;AAC3B,YAAIsB,IAAItB,KAAKuB,MAAL,GAAcN,SAAS/G,GAAT,CAAa8F,KAAKuB,MAAlB,CAAtB;AAAA,YACEC,IAAIxB,KAAKyB,MAAL,GAAcR,SAAS/G,GAAT,CAAa8F,KAAKyB,MAAlB,CADpB;AAAA,YAEEC,IAAI,EAFN;AAGA9B,cAAM1B,IAAN,CAAWwD,CAAX;AACA7B,cAAM3B,IAAN,CAAW,EAACqD,QAAQD,CAAT,EAAYG,QAAQC,CAApB,EAAX,EAAmC,EAACH,QAAQG,CAAT,EAAYD,QAAQD,CAApB,EAAnC;AACAJ,gBAAQlD,IAAR,CAAa,CAACoD,CAAD,EAAII,CAAJ,EAAOF,CAAP,CAAb;AACD,OAPD;;AASA,UAAIxB,OAAOC,IAAI0B,SAAJ,CAAc,OAAd,EACR5F,IADQ,CACHqF,OADG,EAERQ,KAFQ,GAEAtF,MAFA,CAEO,MAFP,EAGR8D,IAHQ,CAGH,OAHG,EAGM,MAHN,CAAX;;AAKA,UAAIL,OAAOE,IAAI0B,SAAJ,CAAc,OAAd,EACR5F,IADQ,CACH6D,MAAMiC,MAAN,CAAa,UAASX,CAAT,EAAY;AAAE,eAAOA,EAAEC,EAAT;AAAc,OAAzC,CADG,EAERS,KAFQ,GAEAtF,MAFA,CAEO,QAFP,EAGR8D,IAHQ,CAGH,OAHG,EAGM,MAHN,EAIRA,IAJQ,CAIH,GAJG,EAIE,CAJF,EAKRA,IALQ,CAKH,MALG,EAKK,UAASc,CAAT,EAAY;AAAE,eAAOZ,MAAMY,EAAEY,KAAR,CAAP;AAAwB,OAL3C,EAMRC,EANQ,CAML,OANK,EAMIC,cANJ,EAORC,IAPQ,CAOHxC,GAAGyC,IAAH,GACHH,EADG,CACA,OADA,EACSI,WADT,EAEHJ,EAFG,CAEA,MAFA,EAEQK,OAFR,EAGHL,EAHG,CAGA,KAHA,EAGOM,SAHP,CAPG,CAAX;;AAYAtC,WAAKzD,MAAL,CAAY,OAAZ,EACG8D,IADH,CACQ,WADR,EACqB,KADrB,EAEG7E,IAFH,CAEQ,UAAS2F,CAAT,EAAY;AAAE,eAAOA,EAAEC,EAAT;AAAc,OAFpC;;AAIAV,iBACGb,KADH,CACSA,KADT,EAEGmC,EAFH,CAEM,MAFN,EAEcO,MAFd;;AAIA7B,iBAAWE,KAAX,CAAiB,MAAjB,EACGd,KADH,CACSA,KADT;;AAGA,eAASyC,MAAT,GAAkB;AAChBtC,aAAKI,IAAL,CAAU,GAAV,EAAemC,YAAf;AACAxC,aAAKK,IAAL,CAAU,WAAV,EAAuBoC,YAAvB;AACD;;AAED,eAASD,YAAT,CAAsBrB,CAAtB,EAAyB;AACvB,eAAO,MAAMA,EAAE,CAAF,EAAKuB,CAAX,GAAe,GAAf,GAAqBvB,EAAE,CAAF,EAAKwB,CAA1B,GACH,GADG,GACGxB,EAAE,CAAF,EAAKuB,CADR,GACY,GADZ,GACkBvB,EAAE,CAAF,EAAKwB,CADvB,GAEH,GAFG,GAEGxB,EAAE,CAAF,EAAKuB,CAFR,GAEY,GAFZ,GAEkBvB,EAAE,CAAF,EAAKwB,CAF9B;AAGD;;AAED,eAASF,YAAT,CAAsBtB,CAAtB,EAAyB;AACvB,eAAO,eAAeA,EAAEuB,CAAjB,GAAqB,GAArB,GAA2BvB,EAAEwB,CAA7B,GAAiC,GAAxC;AACD;;AAED,eAASP,WAAT,CAAqBjB,CAArB,EAAwB;AACtB,YAAI,CAACzB,GAAGkD,KAAH,CAASC,MAAd,EAAsBnC,WAAWoC,WAAX,CAAuB,GAAvB,EAA4BC,OAA5B;AACtB5B,UAAE6B,EAAF,GAAO7B,EAAEuB,CAAT,EAAYvB,EAAE8B,EAAF,GAAO9B,EAAEwB,CAArB;AACD;;AAED,eAASN,OAAT,CAAiBlB,CAAjB,EAAoB;AAClBA,UAAE6B,EAAF,GAAOtD,GAAGkD,KAAH,CAASF,CAAhB,EAAmBvB,EAAE8B,EAAF,GAAOvD,GAAGkD,KAAH,CAASD,CAAnC;AACD;;AAED,eAASL,SAAT,CAAmBnB,CAAnB,EAAsB;AACpB,YAAI,CAACzB,GAAGkD,KAAH,CAASC,MAAd,EAAsBnC,WAAWoC,WAAX,CAAuB,CAAvB;AACtB3B,UAAE6B,EAAF,GAAO,IAAP,EAAa7B,EAAE8B,EAAF,GAAO,IAApB;AACD;;AAED,eAAShB,cAAT,CAAwBd,CAAxB,EAA2B;AACzBA,UAAE+B,SAAF,CAAYtM,MAAZ,CAAmBC,QAAnB,CAA4B,kBAAkBsK,EAAEgC,MAAhD;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCnHUC,mBAAAA,mBADZ;AAKC,sBAAYlN,EAAZ,EAAgBE,EAAhB,EAAoB;AAAA;;AAAA;;AAAA,WAHpBgF,KAGoB,GAHZ,EAGY;AAAA,WAFpBG,MAEoB,GAFX,EAEW;;AAClB,WAAKlF,cAAL,GAAsBH,EAAtB;AACA,WAAKE,EAAL,GAAUA,EAAV;AACA,WAAKA,EAAL,CAAQE,SAAR,wBAA+B,eAAO;AACpC,cAAK+M,YAAL;AACD,OAFD;AAGD;;uBAED5G,mCAAYC,OAAO;AACjB,WAAKrG,cAAL,CAAoBoG,WAApB,CAAgCC,KAAhC;AACD;;uBAED4G,+BAAU5G,OAAO;AACf,UAAI,KAAKrG,cAAL,CAAoB+C,OAApB,KAAgC,IAAhC,IAAwC,KAAK/C,cAAL,CAAoB+C,OAApB,KAAgCoE,SAA5E,EAAuF;AACrF,YAAId,MAAMjB,OAAN,CAAckB,GAAd,KAAsB,KAAKtG,cAAL,CAAoB+C,OAApB,CAA4BuD,GAAlD,IAAyD,KAAKtG,cAAL,CAAoB+C,OAApB,CAA4BZ,IAA5B,KAAqC,OAAlG,EAA2G;AACzG,iBAAO,IAAP;AACD,SAFD,MAGK;AACH,iBAAO,KAAP;AACD;AACF;AACF;;uBAED+K,6BAASvH,MAAM;AACb,WAAKZ,KAAL,GAAaY,IAAb;AACA,WAAKqH,YAAL;AACD;;uBAEDA,uCAAe;AACb,WAAK9H,MAAL,GAAc,EAAd;AACA,2BAAkB,KAAKlF,cAAL,CAAoBkF,MAAtC,kHAA8C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAArCmB,KAAqC;;AAC5C,8BAAiB,KAAKtB,KAAtB,yHAA6B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,cAApBX,IAAoB;;AAC3B,cAAIiC,MAAMjB,OAAN,KAAkB,IAAlB,IAA0BiB,MAAMjB,OAAN,CAAckB,GAAd,KAAsBlC,KAAKkC,GAAzD,EAA8D;AAC5D,iBAAKpB,MAAL,CAAY4C,IAAZ,CAAiBzB,KAAjB;AACD;AACF;AACF;AACF;;uBAED8G,2CAAgB9G,OAAO;AACrB,aAAOA,MAAM+G,IAAN,CACP3M,OADO,CACC,GADD,EACM,GADN,EAEPA,OAFO,CAEC,MAFD,EAES,EAFT,CAAP;AAGD;;;;;;;;;;;;;;;;;;MCrDU4M,kCAAAA;;;;;sCACXC,yBAAOC,MAAM;AACX,aAAOC,IAAIC,eAAJ,CAAoBF,IAApB,CAAP;AACD;;;;;;;;;;;;;;;;;;MCHUG,wCAAAA;;;;;4CACXJ,yBAAOK,UAAU;AACf,UAAIC,QAAQ,EAAZ;AACA,UAAI,CAACD,QAAL,EAAe;AACb,eAAOC,KAAP;AACD;AACD,WAAK,IAAItC,IAAI,CAAb,EAAgBA,IAAIqC,SAAS3E,MAA7B,EAAqCsC,GAArC,EAA0C;AACxCsC,cAAM9F,IAAN,CAAW6F,SAASE,IAAT,CAAcvC,CAAd,CAAX;AACD;AACD,aAAOsC,KAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCJUE,gBAAAA,gBADZ;AASC,mBAAYjO,EAAZ,EAAgBE,EAAhB,EAAoB;AAAA;;AAAA;;AAAA,WANpBgG,SAMoB,GANR,EAMQ;AAAA,WALpBgI,SAKoB,GALR,EAKQ;AAAA,WAJpBC,aAIoB,GAJJ,IAII;AAAA,WAHpB5M,KAGoB,GAHZ,KAGY;AAAA,WAFpBsH,SAEoB,GAFR,KAEQ;;AAClB,WAAK1I,cAAL,GAAsBH,EAAtB;AACA,WAAKE,EAAL,GAAUA,EAAV;AACA,WAAKA,EAAL,CAAQE,SAAR,wBAA+B,eAAO;AACpC,cAAKyI,SAAL,GAAiB,KAAjB;AACD,OAFD;AAGD;;oBAEDuF,qCAAc;AACZ,UAAI,KAAKlI,SAAL,KAAmB,EAAnB,IAAyB,KAAKgI,SAAL,CAAe/E,MAAf,KAA0B,CAAvD,EAA0D;AACxD,aAAK5H,KAAL,GAAa,IAAb;AACD,OAFD,MAEO;AACL,aAAKsH,SAAL,GAAiB,IAAjB;AACA,aAAK1I,cAAL,CAAoB8F,SAApB,CAA8B,KAAKC,SAAnC,EAA8C,KAAKgI,SAAL,CAAe,CAAf,CAA9C;AACA,aAAKhI,SAAL,GAAiB,EAAjB;AACA,aAAKiI,aAAL,GAAqB,IAArB;AACA,aAAKD,SAAL,GAAiB,EAAjB;AACD;AACF;;oBAEDG,mDAAqB;AACnB,WAAK,IAAI5C,IAAI,CAAb,EAAgBA,IAAI,KAAK0C,aAAL,CAAmBhF,MAAvC,EAA+CsC,GAA/C,EAAoD;AAClD,aAAKyC,SAAL,CAAejG,IAAf,CAAoB,KAAKkG,aAAL,CAAmBH,IAAnB,CAAwBvC,CAAxB,CAApB;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MChCU6C,mBAAAA,mBADZ;AAMC,sBAAYtO,EAAZ,EAAgBE,EAAhB,EAAoB;AAAA;;AAAA;;AAAA,WAJpB+M,MAIoB,GAJX3F,SAIW;AAAA,WAHpB/C,IAGoB,GAHb,IAGa;AAAA,WAFpBgK,gBAEoB,GAFDjH,SAEC;;AAClB,WAAKnH,cAAL,GAAsBH,EAAtB;AACA,WAAKE,EAAL,GAAUA,EAAV;AACA,WAAKA,EAAL,CAAQE,SAAR,uBAA8B,eAAO;AACnC,cAAK4H,WAAL;AACD,OAFD;AAGD;;uBAEDqF,6BAASvH,MAAM;AACb,WAAKmH,MAAL,GAAcnH,IAAd;AACA,WAAKkC,WAAL;AACD;;uBAEDA,qCAAc;AACZ,2BAAiB,KAAK7H,cAAL,CAAoB+E,KAArC,kHAA4C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAnCX,IAAmC;;AAC1C,YAAIA,KAAKkC,GAAL,KAAa,KAAKwG,MAAtB,EAA8B;AAC5B,eAAK1I,IAAL,GAAYA,IAAZ;AACD;AACF;AACD,4BAAqB,KAAKA,IAAL,CAAU2D,SAA/B,yHAA0C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAjCC,QAAiC;;AACxC,YAAIA,SAAS1B,GAAT,KAAiB,KAAKtG,cAAL,CAAoB+C,OAApB,CAA4BuD,GAAjD,EAAsD;AACpD,eAAK8H,gBAAL,GAAwB,IAAxB;AACD;AACF;AACF;;uBAED5H,2BAAS;AACP,WAAKxG,cAAL,CAAoBwG,MAApB,CAA2B,KAAKpC,IAAhC,EAAsC,KAAKgK,gBAA3C;AACA,WAAKA,gBAAL,GAAwB,CAAC,KAAKA,gBAA9B;AACD;;uBAEDC,2CAAiB;AACf,UAAI,KAAKjK,IAAL,CAAUqE,WAAV,KAA0BtB,SAA9B,EAAyC;AACvC,eAAO,IAAP;AACD,OAFD,MAGK;AACH,eAAO,KAAP;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC3CUmH,gBAAAA,gBADZ;AAKC,mBAAYzO,EAAZ,EAAgBE,EAAhB,EAAoB;AAAA;;AAAA;;AAAA,WAFpBwO,UAEoB,GAFP,EAEO;;AAClB,WAAKvO,cAAL,GAAsBH,EAAtB;AACA,WAAKE,EAAL,GAAUA,EAAV;AACA,WAAK8H,WAAL;AACA3H,cAAQC,GAAR,CAAY,mBAAZ;AACA,WAAKJ,EAAL,CAAQE,SAAR,uBAA8B,eAAO;AACnC,cAAK4H,WAAL;AACD,OAFD;AAGD;;oBAEDA,qCAAc;AACZ,WAAK0G,UAAL,GAAkB,EAAlB;AACA,2BAAiB,KAAKvO,cAAL,CAAoB+E,KAArC,kHAA4C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAnCX,IAAmC;;AAC1C,YAAIA,KAAKkC,GAAL,KAAa,KAAKtG,cAAL,CAAoB+C,OAApB,CAA4BuD,GAA7C,EAAkD;AAChD,eAAKiI,UAAL,CAAgBzG,IAAhB,CAAqB1D,IAArB;AACD;AACF;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCrBUoK,uBAAAA,uBADZ;AAMC,0BAAY3O,EAAZ,EAAgBE,EAAhB,EAAoB;AAAA;;AAAA;;AAAA,WAHpB+M,MAGoB,GAHX,IAGW;AAAA,WAFpB1I,IAEoB,GAFb,IAEa;;AAClB,WAAKpE,cAAL,GAAsBH,EAAtB;AACA,WAAKE,EAAL,GAAUA,EAAV;AACA,WAAKA,EAAL,CAAQE,SAAR,uBAA8B,eAAO;AACnC,cAAK4H,WAAL;AACD,OAFD;AAGD;;2BAEDqF,6BAASuB,QAAQ;AACf,WAAK3B,MAAL,GAAc2B,OAAO1D,EAArB;AACA,WAAKlD,WAAL;AACD;;2BAEDA,qCAAc;AACZ,2BAAiB,KAAK7H,cAAL,CAAoB+E,KAArC,kHAA4C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAnCX,IAAmC;;AAC1C,YAAIA,KAAKkC,GAAL,KAAa,KAAKwG,MAAtB,EAA8B;AAC5B,eAAK1I,IAAL,GAAYA,IAAZ;AACD;AACF;AACF","file":"app-bundle.js","sourcesContent":["import {inject, Aurelia} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus, OwnUserUpdate, TweetUpdate, UserUpdate} from './services/messages';\nimport TwitterService from './services/twitter-service';\n\n@inject(TwitterService, Aurelia, EventAggregator)\nexport class App {\n\n  constructor(ts, au, ea) {\n    this.au = au;\n    this.twitterService = ts;\n    this.ea = ea;\n    this.ea.subscribe(LoginStatus, msg => {\n      console.log('app subscribe');\n      console.log(msg);\n      if (msg.status.changed === true) {\n        this.router.navigate('/', { replace: true, trigger: false });\n        this.router.reset();\n        if (msg.status.success === true) {\n          Promise.all([\n            this.twitterService.updateData()\n          ]).then(res => {\n            this.au.setRoot('home').then(() => {\n              this.router.navigateToRoute('globalTimeline');\n            });\n          }).catch(error => {\n            console.error(error);\n          });\n        } else {\n          au.setRoot('app');\n        }\n      }\n    });\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'login'], name: 'login', moduleId: 'viewmodels/login/login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'viewmodels/signup/signup', nav: true, title: 'Signup' }\n    ]);\n    this.router = router;\n  }\n\n  attached() {\n    console.log('app attached');\n    this.twitterService.isAuthenticated();\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { inject, Aurelia } from 'aurelia-framework';\nimport TwitterService from 'services/twitter-service';\n\n@inject(Aurelia, TwitterService)\nexport class Home {\n\n  constructor(au, ts) {\n    this.aurelia = au;\n    this.twitterService = ts;\n  }\n\n  configureRouter(config, router) {\n\n    config.map([\n      { route: 'socialGraph', name: 'socialGraph', moduleId: 'viewmodels/socialGraph/socialGraph', nav: true, title: 'Network'},\n      { route: 'followerTimeline', name: 'followerTimeline', moduleId: 'viewmodels/followerTimeline/followerTimeline', nav: true, title: 'Follower Timeline' },\n      { route: ['', 'home'], name: 'globalTimeline', moduleId: 'viewmodels/globalTimeline/globalTimeline', nav: true, title: 'Global Timeline' },\n      { route: 'users', name: 'users', moduleId: 'viewmodels/users/users', nav: true, title: 'Users'},\n      { route: 'profil', name: 'profil', moduleId: 'viewmodels/profil/profil', nav: true, title: 'Profil' },\n      { route: 'admin', name: 'admin', moduleId: 'viewmodels/admin/admin', nav: true, title: 'Admin', role: 'admin' },\n      { route: 'userTimeline/:id', name: 'userTimeline', moduleId: 'viewmodels/userTimeline/userTimeline', nav: false, title: 'userTimeline' },\n      { route: 'logout', name: 'logout', moduleId: 'viewmodels/logout/logout', nav: true, title: 'Logout' }\n    ]);\n    this.router = router;\n\n    config.mapUnknownRoutes(instruction => {\n      return 'home';\n    });\n  }\n}\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject, bindable} from 'aurelia-framework';\nimport TwitterService from './services/twitter-service';\n\n@inject(TwitterService)\nexport class NavBar {\n\n  @bindable router;\n\n  constructor(ts) {\n    this.twitterService = ts;\n    console.log('nav-bar constructor');\n  }\n\n  showNav(navItem) {\n    console.log('nav-bar showNav: ' + navItem.title);\n    if (!navItem.config.role) {\n      return true;\n    }\n    if (this.twitterService.ownUser !== null) {\n      console.log('role: ' + this.twitterService.ownUser.role);\n      if (typeof this.twitterService.ownUser.role !== \"undefined\") {\n        return navItem.config.role === this.twitterService.ownUser.role.toLowerCase();\n      }\n    } else {\n      // ownUser not updated yet\n      console.log('ownUser data not initialized');\n      return false;\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport Fixtures from './fixtures';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus, OwnUserUpdate} from './messages';\n\n@inject(HttpClient, Fixtures, EventAggregator )\nexport default class AsyncHttpClient {\n\n  constructor(httpClient, fixtures, ea) {\n    this.http = httpClient;\n    this.http.configure(http => {\n      http.withBaseUrl(fixtures.baseUrlOnline);\n    });\n    this.ea = ea;\n  }\n\n  isAuthenticated() {\n    if (localStorage.sessionTokenTwitter !== 'null' && typeof localStorage.sessionTokenTwitter !== 'undefined') {\n      this.http.configure(http => {\n        const auth = JSON.parse(localStorage.sessionTokenTwitter);\n        http.withHeader('Authorization', 'bearer ' + auth.token);\n      });\n      // Check if authentication token is valid\n      return Promise.all([\n        this.http.get('api/users/validate')\n      ]).then(res => {\n        // token is valid\n        let status = {\n          success: true,\n          changed: true,\n          message: 'user is authenticated'\n        }\n        console.log('publish: async-http-client: isAuthenticated1');\n        this.ea.publish(new LoginStatus(status));\n        return true;\n      }).catch(error => {\n        // token is not valid\n        let status = {\n          success: false,\n          changed: true,\n          message: 'user is not authenticated'\n        }\n        this.clearAuthentication();\n        console.log('publish: async-http-client: isAuthenticated2');\n        this.ea.publish(new LoginStatus(status));\n      });\n    }/* else {\n      let status = {\n        success: false,\n        changed: false,\n        message: 'user is not authenticated'\n      }\n      this.clearAuthentication();\n      console.log('publish: async-http-client: isAuthenticated3');\n      this.ea.publish(new LoginStatus(status));\n    }*/\n  }\n\n  authenticate(url, user) {\n    return this.http.post(url, user).then(response => {\n      let status = response.content;\n      if (status.success) {\n        localStorage.sessionTokenTwitter = JSON.stringify(response.content);\n        this.http.configure(configuration => {\n          configuration.withHeader('Authorization', 'bearer ' + response.content.token);\n        });\n        console.log('authentication successful: logged in user: ' + user.email);\n        this.ea.publish(new OwnUserUpdate(status.user));\n        status.changed = true;\n      } else {\n        console.log('authentication failed: could not log in user: ' + user.email);\n      }\n      console.log('publish: async-http-client: authenticate1');\n      this.ea.publish(new LoginStatus(status));\n    }).catch(error => {\n      const status = {\n        success: false,\n        message: 'service not available'\n      };\n      console.log('publish: async-http-client: authenticate2');\n      this.ea.publish(new LoginStatus(status));\n    });\n  }\n\n  clearAuthentication() {\n    localStorage.sessionTokenTwitter = null;\n    this.http.configure(configuration => {\n      configuration.withHeader('Authorization', '');\n    });\n  }\n\n  get(url) {\n    return this.http.get(url);\n  }\n\n  post(url, obj) {\n    return this.http.post(url, obj);\n  }\n\n  delete(url) {\n    return this.http.delete(url);\n  }\n}\n","export default class Fixtures {\n\n  baseUrlLocal = 'http://localhost:4000';\n  baseUrlOnline = 'https://safe-brushlands-98673.herokuapp.com';\n  users = [\n    {\n      username: 'user1',\n      name: 'user eins',\n      email: 'user1@1.com',\n      password: 'secret1'\n    },\n    {\n      username: 'user2',\n      name: 'user zwei',\n      email: 'user2@2.com',\n      password: 'secret2'\n    }\n  ];\n\n  tweets = [\n    {\n      text: 'Test tweet 1',\n      tweeter: this.users[0]\n    },\n    {\n      text: 'Test tweet 2',\n      tweeter: this.users[1]\n    }\n  ];\n}\n","export class LoginStatus {\n  constructor(status) {\n    this.status = status;\n  }\n}\n\nexport class TweetUpdate {\n}\n\nexport class UserUpdate {\n}\n\nexport class OwnUserUpdate {\n  constructor(user) {\n    this.user = user;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport Fixtures from './fixtures';\nimport {LoginStatus, OwnUserUpdate, TweetUpdate, UserUpdate} from './messages';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport AsyncHttpClient from './async-http-client';\n\n@inject(Fixtures, EventAggregator, AsyncHttpClient, FormData)\nexport default class TwitterService {\n\n  ownUser = null;\n  users = [];\n  tweets = [];\n\n\n  constructor(data, ea, ac) {\n    this.ea = ea;\n    this.ac = ac;\n\n    this.ea.subscribe(OwnUserUpdate, msg => {\n      this.ownUser = msg.user;\n    });\n    this.ea.subscribe(LoginStatus, msg => {\n      if (msg.status.success === true) {\n        console.log('twitter-service: updateData');\n        this.updateData();\n      } else {\n        this.ac.clearAuthentication();\n      }\n    });\n  }\n\n  updateData() {\n    return Promise.all([\n      this.ac.get('/api/tweets'),\n      this.ac.get('/api/users'),\n      this.ac.get('/api/users/me')\n    ]).then(res => {\n      this.tweets = res[0].content;\n      this.users = res[1].content;\n      this.ownUser = res[2].content;\n\n      this.ea.publish(new TweetUpdate());\n      this.ea.publish(new UserUpdate());\n      this.ea.publish(new OwnUserUpdate(this.ownUser));\n      console.log('twitter-service: updateData done');\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  saveTweet(tweetText, tweetImage) {\n    let formData = new FormData();\n    formData.append('text', tweetText);\n    if (typeof tweetImage !== 'undefined') {\n      formData.append('tweetImage', tweetImage);\n    }\n\n    this.ac.post('/api/tweets', formData).then(res => {\n      this.getTweets();\n    });\n  }\n\n  deleteTweet(tweet) {\n    console.log('twitterService: deleteTweet');\n    this.ac.delete('/api/tweets/' + tweet._id).then(res => {\n      this.getTweets();\n    });\n  }\n\n  deleteAllTweetsForUser(user) {\n    console.log('twitterService: deleteAllTweetsForUser');\n    this.ac.delete('/api/users/' + user._id + '/tweets').then(res => {\n      this.getTweets();\n    });\n  }\n\n  follow(user, bool) {\n    if (bool) {\n      // unfollow\n      this.ac.delete('/api/users/follow/' + user._id).then(res => {\n        this.getUsers();\n      });\n    } else {\n      // follow\n      this.ac.post('/api/users/follow/' + user._id).then(res => {\n        this.getUsers();\n      });\n    }\n  }\n\n  deleteUser(user) {\n    this.ac.delete('/api/users/' + user._id).then(res => {\n      this.getUsers();\n      this.getTweets();\n    });\n  }\n\n  deleteAllUsers() {\n    this.ac.delete('/api/users').then(res => {\n      this.logout();\n    });\n  }\n\n  deleteTweetsForUser(user) {\n    this.ac.delete('/api/users/' + user._id + '/tweets').then(res => {\n      this.getTweets();\n    });\n  }\n\n  updateProfil(username, name, email, password) {\n    let user = {\n      username: username,\n      name: name,\n      email: email,\n      password: password\n    };\n    this.ac.post('/api/users/me', user).then(res => {\n      this.getUsers();\n      this.getMe();\n    });\n  }\n\n  uploadProfilImage(profilIimage) {\n    if (profilIimage !== null || profilIimage !== undefined) {\n      let formData = new FormData();\n      formData.append('info', 'This is a profilImage.');\n      formData.append('profilImage', profilIimage);\n\n      this.ac.post('/api/users/image', formData).then(res => {\n        this.getMe();\n      });\n    }\n  }\n\n  isAuthenticated() {\n    return this.ac.isAuthenticated();\n  }\n\n  getUsers() {\n    return this.ac.get('/api/users').then(res => {\n      this.users = res.content;\n      this.ea.publish(new UserUpdate());\n    });\n  }\n\n  getMe() {\n    return this.ac.get('/api/users/me').then(res => {\n      this.ownUser = res.content;\n      this.ea.publish(new UserUpdate());\n    });\n  }\n\n  getTweets() {\n    return this.ac.get('/api/tweets').then(res => {\n      this.tweets = res.content;\n      this.ea.publish(new TweetUpdate());\n    });\n  }\n\n  register(username, name, email, password) {\n    const newUser = {\n      username: username,\n      name: name,\n      email: email,\n      password: password\n    };\n    return this.ac.post('/api/users', newUser);\n  }\n\n  login(email, password) {\n    const user = {\n      email: email,\n      password: password\n    };\n    return this.ac.authenticate('/api/users/authenticate', user);\n  }\n\n  logout() {\n    const status = {\n      success: false,\n      message: 'Logout',\n      changed: true\n    };\n    this.ac.clearAuthentication();\n    console.log('publish: twitter-service: logout');\n    this.ea.publish(new LoginStatus(status));\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService)\nexport class Admin {\n\n  adminView = true;\n  username = '';\n  name = '';\n  email = '';\n  password = '';\n  error = false;\n  errorText = null;\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  addUser() {\n    return Promise.all([\n      this.twitterService.register(this.username, this.name, this.email, this.password)\n    ]).then(res => {\n      this.twitterService.getUsers();\n      this.errorText = null;\n    }).catch(error => {\n      this.errorText = error.response;\n      //console.error(error);\n    });\n  }\n\n  deleteUser(user) {\n    this.twitterService.deleteUser(user);\n  }\n\n  deleteTweetsForUser(user) {\n    this.twitterService.deleteTweetsForUser(user);\n  }\n\n  deleteAllUsers() {\n    this.twitterService.deleteAllUsers();\n  }\n}\n\n","export class Dashboard {\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class FollowerTimeline {\n\n  users = [];\n  tweets = [];\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.updateUsers();\n    this.ea.subscribe(UserUpdate, msg => {\n      this.updateUsers();\n    });\n  }\n\n  updateUsers() {\n    this.users = [];\n    this.users.push(this.twitterService.ownUser);\n    for (let user of this.twitterService.users) {\n      for (let follower of user.followers) {\n        if (follower._id === this.twitterService.ownUser._id) {\n          this.users.push(user);\n        }\n      }\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class GlobalTimeline {\n\n  users = [];\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.updateUsers();\n    this.ea.subscribe(UserUpdate, msg => {\n      this.updateUsers();\n    });\n  }\n\n  updateUsers() {\n    this.users = this.twitterService.users;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from '../../services/messages';\n\n@inject(EventAggregator, TwitterService)\nexport class Login {\n\n  email = '';\n  password = '';\n  rememberMe = false;\n  error = false;\n\n  constructor(ea, ts) {\n    this.twitterService = ts;\n    this.ea = ea;\n    if (localStorage.emailTwitter !== 'null' && typeof localStorage.emailTwitter !== 'undefined') {\n      let loginOptions = JSON.parse(localStorage.emailTwitter);\n      this.email = loginOptions.email;\n      this.rememberMe = loginOptions.rememberMe;\n    }\n    this.ea.subscribe(LoginStatus, msg => {\n      if (msg.status.success !== true && msg.status.changed !== true) {\n        this.error = true;\n      }\n    });\n  }\n\n  login() {\n    // localStorage: save email and rememberMe\n    if (this.rememberMe === true) {\n      let loginOptions = {\n        email: this.email,\n        rememberMe: this.rememberMe\n      };\n      localStorage.emailTwitter = JSON.stringify(loginOptions);\n    }\n    if (this.rememberMe === false) {\n      localStorage.emailTwitter = null;\n    }\n    console.log(`Trying to log in ${this.email}`);\n    this.twitterService.login(this.email.trim(), this.password.trim());\n  }\n}\n","import TwitterService from '../../services/twitter-service';\nimport {inject} from 'aurelia-framework';\n\n@inject(TwitterService)\nexport class Logout {\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  logout() {\n    console.log('logging out');\n    this.twitterService.logout();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate, TweetUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class Profil {\n\n  ownUser = null;\n  profilImage = null;\n  uploading = false;\n  username = '';\n  name = '';\n  email = '';\n  password = '';\n  numberOfOwnTweets = 0;\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.updateUser();\n    this.calculateNumberOfTweets();\n    this.ea.subscribe(UserUpdate, msg => {\n      this.updateUser();\n    });\n    this.ea.subscribe(TweetUpdate, msg => {\n      this.calculateNumberOfTweets();\n    });\n    this.numberOfOwnTweets;\n  }\n\n  updateUser() {\n    this.ownUser = this.twitterService.ownUser;\n    this.username = this.ownUser.username;\n    this.name = this.ownUser.name;\n    this.email = this.ownUser.email;\n    this.password = this.ownUser.password;\n    this.profilImage = null;\n    this.uploading = false;\n  }\n\n  update() {\n    this.twitterService.updateProfil(this.username, this.name, this.email, this.password);\n  }\n\n  deleteAllTweets() {\n    this.twitterService.deleteAllTweetsForUser(this.ownUser);\n  }\n\n  uploadProfilImage() {\n    if (this.profilImage !== null && this.profilImage.length > 0) {\n      this.uploading = true;\n      this.twitterService.uploadProfilImage(this.profilImage[0]);\n      this.profilImage = null;\n    }\n  }\n\n  getNumberOfFollowedUsers() {\n    let number = 0;\n    for (let user of this.twitterService.users) {\n      for (let follower of user.followers) {\n        if (follower._id === this.ownUser._id) {\n          number++;\n        }\n      }\n    }\n    return number;\n  }\n\n  calculateNumberOfTweets() {\n    this.numberOfOwnTweets = 0;\n    for (let tweet of this.twitterService.tweets) {\n      if (tweet.tweeter._id === this.ownUser._id) {\n        this.numberOfOwnTweets++;\n      }\n    }\n    console.log(this.numberOfOwnTweets);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\n\n@inject(TwitterService)\nexport class Signup {\n\n  username = '';\n  name = '';\n  email = '';\n  password = '';\n  error = false;\n  errorText = null;\n\n  constructor(ts) {\n    this.twitterService = ts;\n  }\n\n  register(e) {\n    return Promise.all([\n      this.twitterService.register(this.username.trim(), this.name.trim(), this.email.trim(), this.password.trim())\n    ]).then(res => {\n      this.errorText = null;\n      this.twitterService.login(this.email, this.password);\n    }).catch(error => {\n      this.errorText = error.response;\n      //console.error(error);\n    });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {Router} from 'aurelia-router';\nimport * as d3 from 'd3';\n\n@inject(TwitterService, Router)\nexport class socialGraph {\n\n  static inject() { return [Router]; }\n\n  // Sample implementation from https://bl.ocks.org/mbostock/4600693\n\n  nodes = [];\n  links = [];\n\n  constructor(ts, router) {\n    this.twitterService = ts;\n    this.router = router;\n    this.calculateGraph();\n  }\n\n  calculateGraph() {\n    for (let user of this.twitterService.users) {\n      let node = { 'id': user.username, 'userId': user._id, 'group': 1, 'reference': this};\n      //console.log(node);\n      this.nodes.push(node);\n\n      for (let follower of user.followers) {\n        let link = { 'source': follower.username, 'target': user.username, 'value': 1, 'distance': 40 };\n        //console.log(link);\n        this.links.push(link);\n      }\n    }\n  }\n\n  attached() {\n    let svg = d3.select('svg'),\n      width = +svg.attr('width'),\n      height = +svg.attr('height');\n\n    let color = d3.scaleOrdinal(d3.schemeCategory20);\n\n    let simulation = d3.forceSimulation()\n      .force('link', d3.forceLink().distance(10).strength(0.5))\n      .force('charge', d3.forceManyBody())\n      .force('center', d3.forceCenter(width / 2, height / 2));\n\n    let nodes = this.nodes,\n      nodeById = d3.map(nodes, function(d) { return d.id; }),\n      links = this.links,\n      bilinks = [];\n\n    links.forEach(function(link) {\n      let s = link.source = nodeById.get(link.source),\n        t = link.target = nodeById.get(link.target),\n        i = {}; // intermediate node\n      nodes.push(i);\n      links.push({source: s, target: i}, {source: i, target: t});\n      bilinks.push([s, i, t]);\n    });\n\n    let link = svg.selectAll('.link')\n      .data(bilinks)\n      .enter().append('path')\n      .attr('class', 'link');\n\n    let node = svg.selectAll('.node')\n      .data(nodes.filter(function(d) { return d.id; }))\n      .enter().append('circle')\n      .attr('class', 'node')\n      .attr('r', 7)\n      .attr('fill', function(d) { return color(d.group); })\n      .on('click', navigateToUser)\n      .call(d3.drag()\n        .on('start', dragstarted)\n        .on('drag', dragged)\n        .on('end', dragended));\n\n    node.append('title')\n      .attr('font-size', '1em')\n      .text(function(d) { return d.id; });\n\n    simulation\n      .nodes(nodes)\n      .on('tick', ticked);\n\n    simulation.force('link')\n      .links(links);\n\n    function ticked() {\n      link.attr('d', positionLink);\n      node.attr('transform', positionNode);\n    }\n\n    function positionLink(d) {\n      return 'M' + d[0].x + ',' + d[0].y\n        + 'S' + d[1].x + ',' + d[1].y\n        + ' ' + d[2].x + ',' + d[2].y;\n    }\n\n    function positionNode(d) {\n      return 'translate(' + d.x + ',' + d.y + ')';\n    }\n\n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x, d.fy = d.y;\n    }\n\n    function dragged(d) {\n      d.fx = d3.event.x, d.fy = d3.event.y;\n    }\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null, d.fy = null;\n    }\n\n    function navigateToUser(d) {\n      d.reference.router.navigate('userTimeline/' + d.userId);\n    }\n  }\n}\n\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {TweetUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class Timeline {\n  users = [];\n  tweets = [];\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.ea.subscribe(TweetUpdate, msg => {\n      this.updateTweets();\n    });\n  }\n\n  deleteTweet(tweet) {\n    this.twitterService.deleteTweet(tweet);\n  }\n\n  canDelete(tweet) {\n    if (this.twitterService.ownUser !== null && this.twitterService.ownUser !== undefined) {\n      if (tweet.tweeter._id === this.twitterService.ownUser._id || this.twitterService.ownUser.role === 'admin') {\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n  }\n\n  activate(data) {\n    this.users = data;\n    this.updateTweets();\n  }\n\n  updateTweets() {\n    this.tweets = [];\n    for (let tweet of this.twitterService.tweets) {\n      for (let user of this.users) {\n        if (tweet.tweeter !== null && tweet.tweeter._id === user._id) {\n          this.tweets.push(tweet);\n        }\n      }\n    }\n  }\n\n  getDateInFormat(tweet) {\n    return tweet.date.\n    replace(/T/, ' ').\n    replace(/\\..+/, '');\n  }\n}\n","export class BlobToUrlValueConverter {\n  toView(blob) {\n    return URL.createObjectURL(blob);\n  }\n}\n","export class FileListToArrayValueConverter {\n  toView(fileList) {\n    let files = [];\n    if (!fileList) {\n      return files;\n    }\n    for (let i = 0; i < fileList.length; i++) {\n      files.push(fileList.item(i));\n    }\n    return files;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {TweetUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class Tweet {\n\n  tweetText = '';\n  imageList = [];\n  selectedFiles = null;\n  error = false;\n  uploading = false;\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.ea.subscribe(TweetUpdate, msg => {\n      this.uploading = false;\n    });\n  }\n\n  createTweet() {\n    if (this.tweetText === '' && this.imageList.length === 0) {\n      this.error = true;\n    } else {\n      this.uploading = true;\n      this.twitterService.saveTweet(this.tweetText, this.imageList[0]);\n      this.tweetText = '';\n      this.selectedFiles = null;\n      this.imageList = [];\n    }\n  }\n\n  addPicturesToArray() {\n    for (let i = 0; i < this.selectedFiles.length; i++) {\n      this.imageList.push(this.selectedFiles.item(i));\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class Usercard {\n  userId = undefined;\n  user = null;\n  alreadyFollowing = undefined;\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.ea.subscribe(UserUpdate, msg => {\n      this.updateUsers();\n    });\n  }\n\n  activate(data) {\n    this.userId = data;\n    this.updateUsers();\n  }\n\n  updateUsers() {\n    for (let user of this.twitterService.users) {\n      if (user._id === this.userId) {\n        this.user = user;\n      }\n    }\n    for (let follower of this.user.followers) {\n      if (follower._id === this.twitterService.ownUser._id) {\n        this.alreadyFollowing = true;\n      }\n    }\n  }\n\n  follow() {\n    this.twitterService.follow(this.user, this.alreadyFollowing);\n    this.alreadyFollowing = !this.alreadyFollowing;\n  }\n\n  hasProfilImage() {\n    if (this.user.profilImage !== undefined) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class Users {\n\n  otherUsers = [];\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.updateUsers();\n    console.log('users constructor');\n    this.ea.subscribe(UserUpdate, msg => {\n      this.updateUsers();\n    });\n  }\n\n  updateUsers() {\n    this.otherUsers = [];\n    for (let user of this.twitterService.users) {\n      if (user._id !== this.twitterService.ownUser._id) {\n        this.otherUsers.push(user);\n      }\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TwitterService from '../../services/twitter-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UserUpdate} from '../../services/messages';\n\n@inject(TwitterService, EventAggregator)\nexport class UserTimeline {\n\n  userId = null;\n  user = null;\n\n  constructor(ts, ea) {\n    this.twitterService = ts;\n    this.ea = ea;\n    this.ea.subscribe(UserUpdate, msg => {\n      this.updateUsers();\n    });\n  }\n\n  activate(params) {\n    this.userId = params.id;\n    this.updateUsers();\n  }\n\n  updateUsers() {\n    for (let user of this.twitterService.users) {\n      if (user._id === this.userId) {\n        this.user = user;\n      }\n    }\n  }\n}\n"],"sourceRoot":".."}